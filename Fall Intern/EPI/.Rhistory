nwfit = dump$nweeks.fit
}else{
reg.onset = as.numeric(dump$fit_onset)
nat.onset = dump$model_onset
nwfit = dump$nweeksFit
}
# National Score
nat.data = mydata$model$raw
nat.res.sw = ScoreStartWeek(nat.data, nat.onset, week, est$nat.pot.st[1], est$nat.prob.st)
nat.res.pw = ScorePeakWeek(nat.data, week, est$nat.pot.pw[1], est$nat.prob.pw, peak)
nat.res.pi = ScorePeakInty(nat.data, est$nat.pot.pi[2],est$nat.prob.pi, peak)
nat.res.fc = ScoreForecast(nat.data, nwfit, mydata$nweeksData, est$nat.pot.fc[2,], est$nat.prob.fc)
# Create a csv file for the score of national
nat.est = as.numeric(c(est$nat.pot.st[1],est$nat.pot.pw[1],est$nat.pot.pi[2],as.numeric(est$nat.pot.fc[2,])))
nat.score = rbind(nat.res.sw, nat.res.pw, nat.res.pi, nat.res.fc)
nat.score = cbind(nat.est,nat.score)
target = c("Start week", "Peak week", "Peak intensity", rep("Forecast",4))
nat.score = cbind(rep("US National",nrow(nat.score)), target, nat.score)
row.names(nat.score) = seq(1,nrow(nat.score),1)
nat.score = as.data.frame(nat.score)
names(nat.score) = c("Location","Target","Point Est","Actual Value", "Log score", "Absolute error")
write.csv(nat.score, file = "Nationalscore.csv",row.names = FALSE)
cat("See National score at: 'Nationalscore.csv'\n")
## Regional
pot.st = est$reg.pot.st[,2]
prob.st = est$reg.prob.st
pot.pw = est$reg.pot.pw[,2]
prob.pw = est$reg.prob.pw
pot.pi = est$reg.pot.pi[,3]
prob.pi = est$reg.prob.pi
pot.fc = est$reg.pot.fc
prob.fc = est$reg.prob.fc
reg.sw = NULL
reg.pw = NULL
reg.pi = NULL
reg.fc = NULL
#nfc = min(4,abs(mydata$nweeksData - nwfit))
for(reg.num in 1:10) {
reg.data = mydata$fit$raw[,reg.num]
# Start week
sw.res = ScoreStartWeek(reg.data, reg.onset[reg.num], week,
pot.st[reg.num], subset(prob.st, prob.st[,1] == reg.num))
reg.sw = rbind(reg.sw, sw.res)
# Peak week
pw.res = ScorePeakWeek(reg.data, week, pot.pw[reg.num],
subset(prob.pw, prob.pw[,1] == reg.num), peak)
reg.pw = rbind(reg.pw, pw.res)
# Peak intensity
pi.res = ScorePeakInty(reg.data, pot.pi[reg.num],
subset(prob.pi, prob.pi[,1] == reg.num), peak)
reg.pi = rbind(reg.pi, pi.res)
# 1-4 week ahead forecast
fc.res = ScoreForecast(reg.data, nwfit, mydata$nweeksData, pot.fc[[reg.num]][2,],
subset(prob.fc, prob.fc[,1] == reg.num)[,-1])
fc.res = cbind(rep(reg.num,4), fc.res)
reg.fc = rbind(reg.fc, fc.res)
}
row.names(reg.sw) = seq(1,10,1)
reg.sw = data.frame(seq(1,10,1),reg.sw)
names(reg.sw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pw) = seq(1,10,1)
reg.pw = data.frame(seq(1,10,1),reg.pw)
names(reg.pw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pi) = seq(1,10,1)
reg.pi = data.frame(seq(1,10,1),reg.pi)
names(reg.pi) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.fc) = seq(1,nrow(reg.fc),1)
reg.fc = as.data.frame(reg.fc)
names(reg.fc) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
# Create a csv file for the score of regional
a = data.frame(rep("Start week", 10), pot.st, reg.sw[,-1])
names(a)[1:2] = c("Target","Point Est")
hhs = seq(1,10,1)
a = cbind(hhs,a)
b = data.frame(rep("Peak week", 10), pot.pw, reg.pw[,-1])
names(b)[1:2] = c("Target","Point Est")
b = cbind(hhs,b)
c = data.frame(rep("Peak intensity", 10), pot.pi, reg.pi[,-1])
names(c)[1:2] = c("Target", "Point Est")
c = cbind(hhs,c)
fc = NULL
for(i in 1:10) {
for(j in 1:4) {
fc = c(fc, pot.fc[[i]][2,j])
}
}
d = data.frame(rep("Forecast", length(fc)), fc, reg.fc[-1])
names(d)[1:2] = c("Target","Point Est")
hhs = NULL
for(i in 1:10){
hhs = c(hhs,rep(i,4))
}
d = cbind(hhs,d)
score = rbind(a,b,c,d)
names(score)[1] = "Location"
score = as.matrix(score)
write.csv(score, file = "Regscore.csv",row.names = FALSE)
cat("See Regional score at: 'Regscore.csv'\n")
}
load("CDC-Flu-Challenge-2016-2017-week-22-AggregateProfile.RData")
# load the submission table
table = read.csv("Long_Flu_Submission_Template_update.csv")
SelectFile = "FluChallenge_Selection_nweeks-22.csv"
FillTable(dump=dump,table=table,EW=48,SelectFile=SelectFile)
FillTable(dump=dump,table=table,EW=48,SelectFile=SelectFile)
est = GetEst(dump)
# Calculate historic baselines
curYear = as.integer(strsplit(dump$FY,split="-")[[1]][1])
base = GetHistoric(curYear=curYear,nwindow=3,nweeksFit=dump$nweeksFit)
# Mix DICE distributions 'est' with baseline distributions 'base'
select = read.csv(file=SelectFile)
mydata = get.DICE.data(year=curYear)
nat_baseline = sum(select$baseline*mydata$fit$coef)
est_old = est
est = MixEstBase(est=est_old,base=base,select=select,CDC_weeks=dump$weeks, nat_baseline=nat_baseline)
browser()
# Check if national onset has already occurred
nat.onset = FindOnset(data=mydata$model$raw, onset=mydata$model$onset ,CDCweeks=mydata$weeks)
if(!is.na(nat.onset)) {
# replace probabilities/point forecast with actual onset week
est$nat.pot.st = nat.onset
est$nat.prob.st = data.frame(Start.Week=nat.pot.st,Prob=1)
}
# Region onsets
for(region in 1:10) {
reg.onset = FindOnset(data=mydata$fit$raw[,region], onset=as.double(mydata$fit$onset[region]), CDCweeks=mydata$weeks)
if(!is.na(reg.onset)) {
# replace probabilities/point forecast with actual onset week
est$reg.pot.st[region,2] = reg.onset
PreDat = est$reg.prob.st[est$reg.prob.st[,1]<region,]
PostDat = est$reg.prob.st[est$reg.prob.st[,1]>region,]
NewDat = data.frame(HHS.Region=region, Start.Week=reg.onset, Prob=1)
names(NewDat)[1] = "HHS Region"
est$reg.prob.st = rbind(PreDat,NewDat,PostDat)
}
}
## Begin Filling the .csv
FillTable <- function(dump=NULL,table=NULL,EW=NULL,SelectFile=NULL) {
#' Fill the submission form
#' @param dump Simulation data
#' @param table Submission table
#' @return Return nothing, just create a .csv file for submission
est = GetEst(dump)
# Calculate historic baselines
curYear = as.integer(strsplit(dump$FY,split="-")[[1]][1])
base = GetHistoric(curYear=curYear,nwindow=3,nweeksFit=dump$nweeksFit)
# Mix DICE distributions 'est' with baseline distributions 'base'
select = read.csv(file=SelectFile)
mydata = get.DICE.data(year=curYear)
nat_baseline = sum(select$baseline*mydata$fit$coef)
est_old = est
est = MixEstBase(est=est_old,base=base,select=select,CDC_weeks=dump$weeks, nat_baseline=nat_baseline)
#browser()
# Check if national onset has already occurred
nat.onset = FindOnset(data=mydata$model$raw, onset=mydata$model$onset ,CDCweeks=mydata$weeks)
if(!is.na(nat.onset)) {
# replace probabilities/point forecast with actual onset week
est$nat.pot.st = nat.onset
est$nat.prob.st = data.frame(Start.Week=nat.pot.st,Prob=1)
}
# Region onsets
for(region in 1:10) {
reg.onset = FindOnset(data=mydata$fit$raw[,region], onset=as.double(mydata$fit$onset[region]), CDCweeks=mydata$weeks)
if(!is.na(reg.onset)) {
# replace probabilities/point forecast with actual onset week
est$reg.pot.st[region,2] = reg.onset
PreDat = est$reg.prob.st[est$reg.prob.st[,1]<region,]
PostDat = est$reg.prob.st[est$reg.prob.st[,1]>region,]
NewDat = data.frame(HHS.Region=region, Start.Week=reg.onset, Prob=1)
names(NewDat)[1] = "HHS Region"
est$reg.prob.st = rbind(PreDat,NewDat,PostDat)
}
}
## Begin Filling the .csv
# National
fill.st = FillStartWeek(est$nat.pot.st[1], est$nat.prob.st)
fill.pw = FillPeakWeek(est$nat.pot.pw[1], est$nat.prob.pw)
fill.pi = FillPeakInty(est$nat.pot.pi[2], est$nat.prob.pi)
fill.fc = FillForecast(est$nat.pot.fc[2,], est$nat.prob.fc)
fill.national = c(fill.st,fill.pw,fill.pi,fill.fc)
# Regional
fill.regional = NULL
pot.st = est$reg.pot.st
prob.st = est$reg.prob.st
pot.pw = est$reg.pot.pw
prob.pw = est$reg.prob.pw
pot.pi = est$reg.pot.pi
prob.pi = est$reg.prob.pi
pot.fc = est$reg.pot.fc
prob.fc = est$reg.prob.fc
for(reg.num in 1:10) {
fill.st.reg = FillStartWeek(pot.st[reg.num,2], subset(prob.st, prob.st[,1] == reg.num))
fill.pw.reg = FillPeakWeek(pot.pw[reg.num,2], subset(prob.pw, prob.pw[,1] == reg.num))
fill.pi.reg = FillPeakInty(pot.pi[reg.num,3], subset(prob.pi, prob.pi[,1] == reg.num))
fill.fc.reg = FillForecast(pot.fc[[reg.num]][2,], subset(prob.fc, prob.fc[,1] == reg.num)[,-1])
fill.reg = as.numeric(c(fill.st.reg, fill.pw.reg, fill.pi.reg, fill.fc.reg))
fill.regional = c(fill.regional, fill.reg)
}
v = ncol(table)
table[,v] = c(fill.national, fill.regional)
write.csv(table, file = "Submission.csv", row.names = FALSE)
cat("For CDC Submission Results:",filename,"\n")
}
FillTable(dump=dump,table=table,EW=48,SelectFile=SelectFile)
ScoreEst <- function(dump, mydata, peak) {
#' Give the log score and absolute error of our estimation compared with cdc data
#' @param dump Simulation data
#' @param mydata DICE data for comparison
#' @return return nothing, create two .csv files saving the score for national and regional seperately.
est = GetEst(dump)
week = dump$weeks
if("onset" %in% names(dump)) {
onset = dump$onset
nat.onset = onset[11]
reg.onset = onset[1:10]
nwfit = dump$nweeks.fit
}else{
reg.onset = as.numeric(dump$fit_onset)
nat.onset = dump$model_onset
nwfit = dump$nweeksFit
}
# National Score
nat.data = mydata$model$raw
nat.res.sw = ScoreStartWeek(nat.data, nat.onset, week, est$nat.pot.st[1], est$nat.prob.st)
nat.res.pw = ScorePeakWeek(nat.data, week, est$nat.pot.pw[1], est$nat.prob.pw, peak)
nat.res.pi = ScorePeakInty(nat.data, est$nat.pot.pi[2],est$nat.prob.pi, peak)
nat.res.fc = ScoreForecast(nat.data, nwfit, mydata$nweeksData, est$nat.pot.fc[2,], est$nat.prob.fc)
# Create a csv file for the score of national
nat.est = as.numeric(c(est$nat.pot.st[1],est$nat.pot.pw[1],est$nat.pot.pi[2],as.numeric(est$nat.pot.fc[2,])))
nat.score = rbind(nat.res.sw, nat.res.pw, nat.res.pi, nat.res.fc)
nat.score = cbind(nat.est,nat.score)
target = c("Start week", "Peak week", "Peak intensity", rep("Forecast",4))
nat.score = cbind(rep("US National",nrow(nat.score)), target, nat.score)
row.names(nat.score) = seq(1,nrow(nat.score),1)
nat.score = as.data.frame(nat.score)
names(nat.score) = c("Location","Target","Point Est","Actual Value", "Log score", "Absolute error")
write.csv(nat.score, file = "Nationalscore.csv",row.names = FALSE)
cat("See National score at: 'Nationalscore.csv'\n")
## Regional
pot.st = est$reg.pot.st[,2]
prob.st = est$reg.prob.st
pot.pw = est$reg.pot.pw[,2]
prob.pw = est$reg.prob.pw
pot.pi = est$reg.pot.pi[,3]
prob.pi = est$reg.prob.pi
pot.fc = est$reg.pot.fc
prob.fc = est$reg.prob.fc
reg.sw = NULL
reg.pw = NULL
reg.pi = NULL
reg.fc = NULL
#nfc = min(4,abs(mydata$nweeksData - nwfit))
for(reg.num in 1:10) {
reg.data = mydata$fit$raw[,reg.num]
# Start week
sw.res = ScoreStartWeek(reg.data, reg.onset[reg.num], week,
pot.st[reg.num], subset(prob.st, prob.st[,1] == reg.num))
reg.sw = rbind(reg.sw, sw.res)
# Peak week
pw.res = ScorePeakWeek(reg.data, week, pot.pw[reg.num],
subset(prob.pw, prob.pw[,1] == reg.num), peak)
reg.pw = rbind(reg.pw, pw.res)
# Peak intensity
pi.res = ScorePeakInty(reg.data, pot.pi[reg.num],
subset(prob.pi, prob.pi[,1] == reg.num), peak)
reg.pi = rbind(reg.pi, pi.res)
# 1-4 week ahead forecast
fc.res = ScoreForecast(reg.data, nwfit, mydata$nweeksData, pot.fc[[reg.num]][2,],
subset(prob.fc, prob.fc[,1] == reg.num)[,-1])
fc.res = cbind(rep(reg.num,4), fc.res)
reg.fc = rbind(reg.fc, fc.res)
}
row.names(reg.sw) = seq(1,10,1)
reg.sw = data.frame(seq(1,10,1),reg.sw)
names(reg.sw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pw) = seq(1,10,1)
reg.pw = data.frame(seq(1,10,1),reg.pw)
names(reg.pw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pi) = seq(1,10,1)
reg.pi = data.frame(seq(1,10,1),reg.pi)
names(reg.pi) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.fc) = seq(1,nrow(reg.fc),1)
reg.fc = as.data.frame(reg.fc)
names(reg.fc) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
# Create a csv file for the score of regional
a = data.frame(rep("Start week", 10), pot.st, reg.sw[,-1])
names(a)[1:2] = c("Target","Point Est")
hhs = seq(1,10,1)
a = cbind(hhs,a)
b = data.frame(rep("Peak week", 10), pot.pw, reg.pw[,-1])
names(b)[1:2] = c("Target","Point Est")
b = cbind(hhs,b)
c = data.frame(rep("Peak intensity", 10), pot.pi, reg.pi[,-1])
names(c)[1:2] = c("Target", "Point Est")
c = cbind(hhs,c)
fc = NULL
for(i in 1:10) {
for(j in 1:4) {
fc = c(fc, pot.fc[[i]][2,j])
}
}
d = data.frame(rep("Forecast", length(fc)), fc, reg.fc[-1])
names(d)[1:2] = c("Target","Point Est")
hhs = NULL
for(i in 1:10){
hhs = c(hhs,rep(i,4))
}
d = cbind(hhs,d)
score = rbind(a,b,c,d)
names(score)[1] = "Location"
score = as.matrix(score)
write.csv(score, file = "Regscore.csv",row.names = FALSE)
cat("See Regional score at: 'Regscore.csv'\n")
}
est = GetEst(dump)
# Calculate historic baselines
curYear = as.integer(strsplit(dump$FY,split="-")[[1]][1])
base = GetHistoric(curYear=curYear,nwindow=3,nweeksFit=dump$nweeksFit)
# Mix DICE distributions 'est' with baseline distributions 'base'
select = read.csv(file=SelectFile)
mydata = get.DICE.data(year=curYear)
nat_baseline = sum(select$baseline*mydata$fit$coef)
est_old = est
est = MixEstBase(est=est_old,base=base,select=select,CDC_weeks=dump$weeks, nat_baseline=nat_baseline)
#browser()
# Check if national onset has already occurred
nat.onset = FindOnset(data=mydata$model$raw, onset=mydata$model$onset ,CDCweeks=mydata$weeks)
if(!is.na(nat.onset)) {
# replace probabilities/point forecast with actual onset week
est$nat.pot.st = nat.onset
est$nat.prob.st = data.frame(Start.Week=nat.pot.st,Prob=1)
}
# Region onsets
for(region in 1:10) {
reg.onset = FindOnset(data=mydata$fit$raw[,region], onset=as.double(mydata$fit$onset[region]), CDCweeks=mydata$weeks)
if(!is.na(reg.onset)) {
# replace probabilities/point forecast with actual onset week
est$reg.pot.st[region,2] = reg.onset
PreDat = est$reg.prob.st[est$reg.prob.st[,1]<region,]
PostDat = est$reg.prob.st[est$reg.prob.st[,1]>region,]
NewDat = data.frame(HHS.Region=region, Start.Week=reg.onset, Prob=1)
names(NewDat)[1] = "HHS Region"
est$reg.prob.st = rbind(PreDat,NewDat,PostDat)
}
}
## Begin Filling the .csv
# National
fill.st = FillStartWeek(est$nat.pot.st[1], est$nat.prob.st)
fill.pw = FillPeakWeek(est$nat.pot.pw[1], est$nat.prob.pw)
fill.pi = FillPeakInty(est$nat.pot.pi[2], est$nat.prob.pi)
fill.fc = FillForecast(est$nat.pot.fc[2,], est$nat.prob.fc)
fill.national = c(fill.st,fill.pw,fill.pi,fill.fc)
# Regional
fill.regional = NULL
pot.st = est$reg.pot.st
prob.st = est$reg.prob.st
pot.pw = est$reg.pot.pw
prob.pw = est$reg.prob.pw
pot.pi = est$reg.pot.pi
prob.pi = est$reg.prob.pi
pot.fc = est$reg.pot.fc
prob.fc = est$reg.prob.fc
for(reg.num in 1:10) {
fill.st.reg = FillStartWeek(pot.st[reg.num,2], subset(prob.st, prob.st[,1] == reg.num))
fill.pw.reg = FillPeakWeek(pot.pw[reg.num,2], subset(prob.pw, prob.pw[,1] == reg.num))
fill.pi.reg = FillPeakInty(pot.pi[reg.num,3], subset(prob.pi, prob.pi[,1] == reg.num))
fill.fc.reg = FillForecast(pot.fc[[reg.num]][2,], subset(prob.fc, prob.fc[,1] == reg.num)[,-1])
fill.reg = as.numeric(c(fill.st.reg, fill.pw.reg, fill.pi.reg, fill.fc.reg))
fill.regional = c(fill.regional, fill.reg)
}
v = ncol(table)
FillTable <- function(dump=NULL,table=NULL,EW=NULL,SelectFile=NULL) {
#' Fill the submission form
#' @param dump Simulation data
#' @param table Submission table
#' @return Return nothing, just create a .csv file for submission
est = GetEst(dump)
# Calculate historic baselines
curYear = as.integer(strsplit(dump$FY,split="-")[[1]][1])
base = GetHistoric(curYear=curYear,nwindow=3,nweeksFit=dump$nweeksFit)
# Mix DICE distributions 'est' with baseline distributions 'base'
select = read.csv(file=SelectFile)
mydata = get.DICE.data(year=curYear)
nat_baseline = sum(select$baseline*mydata$fit$coef)
est_old = est
est = MixEstBase(est=est_old,base=base,select=select,CDC_weeks=dump$weeks, nat_baseline=nat_baseline)
#browser()
# Check if national onset has already occurred
nat.onset = FindOnset(data=mydata$model$raw, onset=mydata$model$onset ,CDCweeks=mydata$weeks)
if(!is.na(nat.onset)) {
# replace probabilities/point forecast with actual onset week
est$nat.pot.st = nat.onset
est$nat.prob.st = data.frame(Start.Week=nat.pot.st,Prob=1)
}
# Region onsets
for(region in 1:10) {
reg.onset = FindOnset(data=mydata$fit$raw[,region], onset=as.double(mydata$fit$onset[region]), CDCweeks=mydata$weeks)
if(!is.na(reg.onset)) {
# replace probabilities/point forecast with actual onset week
est$reg.pot.st[region,2] = reg.onset
PreDat = est$reg.prob.st[est$reg.prob.st[,1]<region,]
PostDat = est$reg.prob.st[est$reg.prob.st[,1]>region,]
NewDat = data.frame(HHS.Region=region, Start.Week=reg.onset, Prob=1)
names(NewDat)[1] = "HHS Region"
est$reg.prob.st = rbind(PreDat,NewDat,PostDat)
}
}
## Begin Filling the .csv
# National
fill.st = FillStartWeek(est$nat.pot.st[1], est$nat.prob.st)
fill.pw = FillPeakWeek(est$nat.pot.pw[1], est$nat.prob.pw)
fill.pi = FillPeakInty(est$nat.pot.pi[2], est$nat.prob.pi)
fill.fc = FillForecast(est$nat.pot.fc[2,], est$nat.prob.fc)
fill.national = c(fill.st,fill.pw,fill.pi,fill.fc)
# Regional
fill.regional = NULL
pot.st = est$reg.pot.st
prob.st = est$reg.prob.st
pot.pw = est$reg.pot.pw
prob.pw = est$reg.prob.pw
pot.pi = est$reg.pot.pi
prob.pi = est$reg.prob.pi
pot.fc = est$reg.pot.fc
prob.fc = est$reg.prob.fc
for(reg.num in 1:10) {
fill.st.reg = FillStartWeek(pot.st[reg.num,2], subset(prob.st, prob.st[,1] == reg.num))
fill.pw.reg = FillPeakWeek(pot.pw[reg.num,2], subset(prob.pw, prob.pw[,1] == reg.num))
fill.pi.reg = FillPeakInty(pot.pi[reg.num,3], subset(prob.pi, prob.pi[,1] == reg.num))
fill.fc.reg = FillForecast(pot.fc[[reg.num]][2,], subset(prob.fc, prob.fc[,1] == reg.num)[,-1])
fill.reg = as.numeric(c(fill.st.reg, fill.pw.reg, fill.pi.reg, fill.fc.reg))
fill.regional = c(fill.regional, fill.reg)
}
v = ncol(table)
table[,v] = c(fill.national, fill.regional)
filename = paste0(getwd(),'/EW',EW,'-PSI-',Sys.Date(),'.csv')
write.csv(table, file = filename, row.names = FALSE)
cat("For CDC Submission Results:",filename,"\n")
}
load("CDC-Flu-Challenge-2016-2017-week-22-AggregateProfile.RData")
# load the submission table
table = read.csv("Long_Flu_Submission_Template_update.csv")
SelectFile = "FluChallenge_Selection_nweeks-22.csv"
FillTable(dump=dump,table=table,EW=48,SelectFile=SelectFile)
FillTable <- function(dump=NULL,table=NULL,EW=NULL,SelectFile=NULL) {
#' Fill the submission form
#' @param dump Simulation data
#' @param table Submission table
#' @return Return nothing, just create a .csv file for submission
est = GetEst(dump)
# Calculate historic baselines
curYear = as.integer(strsplit(dump$FY,split="-")[[1]][1])
base = GetHistoric(curYear=curYear,nwindow=3,nweeksFit=dump$nweeksFit)
# Mix DICE distributions 'est' with baseline distributions 'base'
select = read.csv(file=SelectFile)
mydata = get.DICE.data(year=curYear)
nat_baseline = sum(select$baseline*mydata$fit$coef)
est_old = est
est = MixEstBase(est=est_old,base=base,select=select,CDC_weeks=dump$weeks, nat_baseline=nat_baseline)
browser()
# Check if national onset has already occurred
nat.onset = FindOnset(data=mydata$model$raw, onset=mydata$model$onset ,CDCweeks=mydata$weeks)
if(!is.na(nat.onset)) {
# replace probabilities/point forecast with actual onset week
est$nat.pot.st = nat.onset
est$nat.prob.st = data.frame(Start.Week=nat.pot.st,Prob=1)
}
# Region onsets
for(region in 1:10) {
reg.onset = FindOnset(data=mydata$fit$raw[,region], onset=as.double(mydata$fit$onset[region]), CDCweeks=mydata$weeks)
if(!is.na(reg.onset)) {
# replace probabilities/point forecast with actual onset week
est$reg.pot.st[region,2] = reg.onset
PreDat = est$reg.prob.st[est$reg.prob.st[,1]<region,]
PostDat = est$reg.prob.st[est$reg.prob.st[,1]>region,]
NewDat = data.frame(HHS.Region=region, Start.Week=reg.onset, Prob=1)
names(NewDat)[1] = "HHS Region"
est$reg.prob.st = rbind(PreDat,NewDat,PostDat)
}
}
## Begin Filling the .csv
# National
fill.st = FillStartWeek(est$nat.pot.st[1], est$nat.prob.st)
fill.pw = FillPeakWeek(est$nat.pot.pw[1], est$nat.prob.pw)
fill.pi = FillPeakInty(est$nat.pot.pi[2], est$nat.prob.pi)
fill.fc = FillForecast(est$nat.pot.fc[2,], est$nat.prob.fc)
fill.national = c(fill.st,fill.pw,fill.pi,fill.fc)
# Regional
fill.regional = NULL
pot.st = est$reg.pot.st
prob.st = est$reg.prob.st
pot.pw = est$reg.pot.pw
prob.pw = est$reg.prob.pw
pot.pi = est$reg.pot.pi
prob.pi = est$reg.prob.pi
pot.fc = est$reg.pot.fc
prob.fc = est$reg.prob.fc
for(reg.num in 1:10) {
fill.st.reg = FillStartWeek(pot.st[reg.num,2], subset(prob.st, prob.st[,1] == reg.num))
fill.pw.reg = FillPeakWeek(pot.pw[reg.num,2], subset(prob.pw, prob.pw[,1] == reg.num))
fill.pi.reg = FillPeakInty(pot.pi[reg.num,3], subset(prob.pi, prob.pi[,1] == reg.num))
fill.fc.reg = FillForecast(pot.fc[[reg.num]][2,], subset(prob.fc, prob.fc[,1] == reg.num)[,-1])
fill.reg = as.numeric(c(fill.st.reg, fill.pw.reg, fill.pi.reg, fill.fc.reg))
fill.regional = c(fill.regional, fill.reg)
}
v = ncol(table)
table[,v] = c(fill.national, fill.regional)
filename = paste0(getwd(),'/EW',EW,'-PSI-',Sys.Date(),'.csv')
write.csv(table, file = filename, row.names = FALSE)
cat("For CDC Submission Results:",filename,"\n")
}
FillTable(dump=dump,table=table,EW=48,SelectFile=SelectFile)
？broeser
