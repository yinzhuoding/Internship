if(nweeksFit == 20) {
if((prior[ip] == 1) | (prior[ip] == 2)) {
nreal = 2
llk.mean = array(0, c(nregion, nreal))
llk.best = array(0, c(nregion, nreal))
}
}
for (ireal in 1:nreal) {
filename = paste("mcmc-", dataName, "-", ireal, ".RData", sep = "")
load(filename)
# This loads a list of mcmc objects with nregion + 1 elements
for (iregion in 1:nregion) {
tmp = results.list[[iregion]]
nlines = dim(tmp)[1]
nparam1 = dim(tmp)[2]
nlines2 = nlines/2
llk.mean[iregion, ireal] = mean(tmp[nlines2:nlines, nparam1])
llk.best[iregion, ireal] = min(tmp[nlines2:nlines, nparam1])
}
} # End of loop on realizations - for now use the best 'mean' to select the chain.  Can change to using llk.best
for (iregion in 1:nregion) {
iBest[iregion, imodel,ip] = which.min(llk.mean[iregion, ])
}
}
}
filename = paste0(csv_and_pdfDir,'choices-nweeksData-',nweeksData,'-nweeksFit-',nweeksFit,'.csv')
write.csv(file=filename,iBest)
cat('\n For a csv file with Best chain Info see: ',filename,'\n')
}
weeks = mydata$weeks
nweeks = mydata$nweeks
## Now we can plot everything
score.st = array(NA, c(nregion,length(nwfit),nmodels,nprior))
score.pw = array(NA, c(nregion,length(nwfit),nmodels,nprior))
score.pi = array(NA, c(nregion,length(nwfit),nmodels,nprior))
score.fc = array(NA, c(nregion,length(nwfit),nmodels,nprior,4))
nat.st = array(NA,c(length(nwfit),nmodels,nprior))
nat.pw = array(NA,c(length(nwfit),nmodels,nprior))
nat.pi = array(NA,c(length(nwfit),nmodels,nprior))
nat.fc = array(NA,c(length(nwfit),nmodels,nprior,4))
dimnames(score.st)[[1]] = seq(1,nregion,1)
dimnames(score.st)[[2]] = nwfit
dimnames(score.st)[[3]] = paste('model',models,sep='')
dimnames(score.st)[[4]] = paste('prior',prior,sep='')
for (nweeksFit in nwfit) {
for (imodel in 1:nmodels) {
for (ip in 1:nprior) {
if (Temp[ip] == 1) {
subDir <- paste0(dataDir,"cdc-uncpl-prior", prior[ip], "-nweeks-", nweeksFit)
} else {
subDir <- paste0(dataDir,"cdc-uncpl-prior", prior[ip], "-sig", Temp[ip], "-nweeks-", nweeksFit)
}
myDir = subDir
setwd(myDir)
dataName = paste0(dataType, "-", mydata$model$name, "-uncpl-", FY, "-", imodel, "-", nweeksFit)
filename = paste0("profiles-", dataName, "-", iBest[iregion, imodel, ip], ".RData")
load(filename)
ScoreEst(dump,mydata)
nat.score = read.csv("Nationalscore.csv")
reg.score = read.csv("Regscore.csv")
nat.st[nweeksFit-nwfit[1]+1,imodel,ip] = subset(nat.score, Target == "Start week")$Log.score
nat.pw[nweeksFit-nwfit[1]+1,imodel,ip] = subset(nat.score, Target == "Peak week")$Log.score
nat.pi[nweeksFit-nwfit[1]+1,imodel,ip] = subset(nat.score, Target == "Peak intensity")$Log.score
nat.fc[nweeksFit-nwfit[1]+1,imodel,ip, ] = subset(nat.score, Target == "Forecast")$Log.score
for (iregion in 1:nregion) {
score.st[iregion,nweeksFit-nwfit[1]+1,imodel,ip] = subset(reg.score, (Location == iregion) & (Target == "Start week"))$Log.score
score.pw[iregion,nweeksFit-nwfit[1]+1,imodel,ip] = subset(reg.score, (Location == iregion) & (Target == "Peak week"))$Log.score
score.pi[iregion,nweeksFit-nwfit[1]+1,imodel,ip] = subset(reg.score, (Location == iregion) & (Target == "Peak intensity"))$Log.score
score.fc[iregion,nweeksFit-nwfit[1]+1,imodel,ip, ] = subset(reg.score, (Location == iregion) & (Target == "Forecast"))$Log.score
}
nat.real = nat.score[,c(1,2,4)]
reg.real = reg.score[,c(1,2,4)]
}
}
}
y.min = -10
y.max = 0
p.pch = seq(15,15+nmodels-1,1)
p.col = rainbow(nmodels)
xrange = c(nwfit[1],nwfit[length(nwfit)])
xaxis = nwfit
#xrange = c(1,52)
#xaxis = seq(1,52,1)
## Start week
if (pdf == TRUE) {
pdfName = paste0(csv_and_pdfDir, "compare-models-score-StartWeek.pdf", sep = "")
pdf(file = pdfName, width = 12, height = 11)
}
par(mar = c(4, 3, 1, 1), mfrow = c(nmodels, nprior))
# National
for(ip in 1:nprior) {
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1,xaxis)
for(imodel in 1:nmodels) {
points(nwfit, nat.st[ ,imodel,ip], type = "b", pch = p.pch[imodel], col = alpha(p.col[imodel],0.5))
}
#abline(v = nat.real[1,3], col = "grey")
legend("topleft",priorLegend[ip], text.col = "blue", bty = "n", xjust = 0)
legend("topright", modelLegend, text.col = p.col, bty = "n", xjust = 1)
title(main = "National")
}
# HHS Region
for(iregion in 1:nregion) {
for(ip in 1:nprior) {
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1,xaxis)
for(imodel in 1:nmodels) {
points(nwfit, score.st[iregion, ,imodel,ip], type = "b", pch = p.pch[imodel], col = alpha(p.col[imodel],0.5))
}
#abline(v = subset(reg.real, Location == iregion)[1,3], col = "grey")
legend("topleft",priorLegend[ip], text.col = "blue", bty = "n", xjust = 0)
legend("topright", modelLegend, text.col = p.col, bty = "n", xjust = 1)
title(main = mydata$fit$name[iregion])
}
}
if (pdf == TRUE) dev.off()
## Peak week
if (pdf == TRUE) {
pdfName = paste0(csv_and_pdfDir, "compare-models-score-PeakWeek.pdf", sep = "")
pdf(file = pdfName, width = 12, height = 11)
}
par(mar = c(4, 3, 1, 1), mfrow = c(nmodels, nprior))
# National
for(ip in 1:nprior) {
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1,xaxis)
for(imodel in 1:nmodels) {
points(nwfit, nat.pw[ ,imodel,ip], type = "b", pch = p.pch[imodel], col = alpha(p.col[imodel],0.5))
}
#abline(v = nat.real[2,3], col = "grey")
legend("topleft",priorLegend[ip], text.col = "blue", bty = "n", xjust = 0)
legend("topright", modelLegend, text.col = p.col, bty = "n", xjust = 1)
title(main = "National")
}
# HHS region
for(iregion in 1:nregion) {
for(ip in 1:nprior) {
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1,xaxis)
for(imodel in 1:nmodels) {
points(nwfit, score.pw[iregion, ,imodel,ip], type = "b", pch = p.pch[imodel], col = alpha(p.col[imodel],0.5))
}
#abline(v = subset(reg.real, Location == iregion)[2,3], col = "grey")
legend("topleft",priorLegend[ip], text.col = "blue", bty = "n", xjust = 0)
legend("topright", modelLegend, text.col = p.col, bty = "n", xjust = 1)
title(main = mydata$fit$name[iregion])
}
}
if (pdf == TRUE) dev.off()
## Peak intensity
if (pdf == TRUE) {
pdfName = paste0(csv_and_pdfDir, "compare-models-score-PeakIntensity.pdf", sep = "")
pdf(file = pdfName, width = 12, height = 11)
}
par(mar = c(4, 3, 1, 1), mfrow = c(nmodels, nprior))
# National
for(ip in 1:nprior) {
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1, xaxis)
for(imodel in 1:nmodels) {
points(nwfit, nat.pi[ ,imodel,ip], type = "b", pch = p.pch[imodel], col = alpha(p.col[imodel],0.5))
}
#bline(v = nat.real[2,3], col = "grey")
legend("topleft",priorLegend[ip], text.col = "blue", bty = "n", xjust = 0)
legend("topright", modelLegend, text.col = p.col, bty = "n", xjust = 1)
title(main = "National")
}
# HHS region
for(iregion in 1:nregion) {
for(ip in 1:nprior) {
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1,xaxis)
for(imodel in 1:nmodels) {
points(nwfit, score.pi[iregion, ,imodel,ip], type = "b", pch = p.pch[imodel], col = alpha(p.col[imodel],0.5))
}
#abline(v = subset(reg.real, Location == iregion)[2,3], col = "grey")
legend("topleft",priorLegend[ip], text.col = "blue", bty = "n", xjust = 0)
legend("topright", modelLegend, text.col = p.col, bty = "n", xjust = 1)
title(main = mydata$fit$name[iregion])
}
}
if (pdf == TRUE) dev.off()
## Forecast
if (pdf == TRUE) {
pdfName = paste0(csv_and_pdfDir, "compare-models-score-Forecast.pdf", sep = "")
pdf(file = pdfName, width = 12, height = 11)
}
par(mar = c(4, 3, 1, 1), mfrow = c(nmodels, nprior))
# National
for(imodel in 1:nmodels) {
for(ip in 1:nprior) {
nfc = length(score.fc[iregion,nweeksFit-nwfit[1]+1,imodel,ip, ])
p.col = rainbow(4)
p.pch = seq(15,15+4-1,1)
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1,xaxis)
for (i in 1:4) {
points(nwfit, nat.fc[ ,imodel,ip,i], type = "b", pch = p.pch[i], col = alpha(p.col[i],0.5))
}
#abline(v = nat.real[2,3], col = "grey")
legend("topleft",c(modelLegend[imodel], priorLegend[ip]), text.col = c("black","blue"), bty = "n", xjust = 0)
legend("topright",c("1wk ahead", "2wk ahead", "3wk ahead", "4wk ahead")[1:nfc], text.col = p.col, bty = "n",xjust = 0)
title(main = "National")
}
}
for(iregion in 1:nregion) {
for(imodel in 1:nmodels) {
for(ip in 1:nprior) {
nfc = length(score.fc[iregion,nweeksFit-nwfit[1]+1,imodel,ip, ])
plot(0, type = "n",xlab = "nweeksFit", ylab = "Log score", xlim = xrange, ylim = c(y.min,y.max), xaxt = "n")
axis(1,xaxis)
p.col = rainbow(nfc)
p.pch = seq(15,15+nfc-1,1)
for (i in 1:nfc) {
points(nwfit, score.fc[iregion, ,imodel,ip,i], type = "b", pch = p.pch[i], col = alpha(p.col[i],0.5))
}
#abline(v = subset(reg.real, Location == iregion)[2,3], col = "grey")
legend("topleft",c(modelLegend[imodel], priorLegend[ip]), text.col = c("black","blue"), bty = "n", xjust = 0)
legend("topright",c("1wk ahead", "2wk ahead", "3wk ahead", "4wk ahead")[1:nfc], text.col = p.col, bty = "n", xjust = 1)
title(main = mydata$fit$name[iregion])
}
}
}
if (pdf == TRUE) dev.off()
as.numeric(mydata$fit$onset)
names(mydata$fit)
mydata$fit$raw
location.name = as.character(unique(est$Location))
est = read.csv("EW43-PSI-2016-11-07.csv")
setwd("~/Documents/yinzhuo/Fall Intern/Score")
est = read.csv("EW43-PSI-2016-11-07.csv")
location.name = as.character(unique(est$Location))
subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Point"))$Value
reg.num = 1
subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Point"))$Value
target.name = as.character(unique(est$Target))
nat.onset = mydata$model$onset
reg.onset = as.numeric(mydata$fit$onset)
nweeksData = mydata$nweeksData
week = mydata$weeks
target.name = as.character(unique(est$Target))
location.name = as.character(unique(est$Location))
subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.st = cbind(as.numeric(bins[index]), temp[index])
bins = subset(est, (Location == "US National")&(Target == target.name[1])&(Type == "Bin"))$Bin_start_incl
bins = suppressWarnings(as.numeric(levels(bins))[bins])
prob.st = cbind(as.numeric(bins[index]), temp[index])
prob.st
sw.res = ScoreStartWeek(reg.data, reg.onset[reg.num], week, pot.st, prob.st)
pot.st = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.st = cbind(as.numeric(bins[index]), temp[index])
sw.res = ScoreStartWeek(reg.data, reg.onset[reg.num], week, pot.st, prob.st)
reg.data = mydata$fit$raw[,reg.num]
pot.st = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.st = cbind(as.numeric(bins[index]), temp[index])
sw.res = ScoreStartWeek(reg.data, reg.onset[reg.num], week, pot.st, prob.st)
sw.res
reg.sw = rbind(reg.sw, sw.res)
reg.sw = NULL
reg.sw = rbind(reg.sw, sw.res)
reg.sw
reg.sw = NULL
reg.pw = NULL
reg.pi = NULL
reg.fc = NULL
pot.pw = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[2])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[2])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.pw = cbind(as.numeric(bins[index]), temp[index])
pw.res = ScorePeakWeek(reg.data, week, pot.pw, prob.pw)
reg.pw = rbind(reg.pw, pw.res)
pw.res
pot.pi = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Bin"))$Value
prob.pi = cbind(bin.pi, temp)
bin.pi = seq(from = 0, to = 13, by = 0.1)
pot.pi = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Bin"))$Value
prob.pi = cbind(bin.pi, temp)
pi.res = ScorePeakInty(reg.data, pot.pi,prob.pi)
pi.res
reg.pi = rbind(reg.pi, pi.res)
pot.fc = subset(est, (Location == location.name[reg.num + 1])&(Target %in% target.name[4:7])&(Type == "Point"))$Value
prob.fc = bin.pi
for(wk in 1:4) {
prob.fc = cbind(prob.fc, subset(est, (Location == location.name[reg.num + 1])&(Target %in% target.name[wk+3])&(Type == "Bin"))$Value)
}
fc.res = ScoreForecast(reg.data, nweeksFit, nweeksData, pot.fc,prob.fc)
fc.res
fc.res = cbind(rep(reg.num,4), fc.res)
reg.fc = rbind(reg.fc, fc.res)
reg.fc
ScoreCsv = function(mydata, est, nweeksFit) {
nat.onset = mydata$model$onset
reg.onset = as.numeric(mydata$fit$onset)
nweeksData = mydata$nweeksData
week = mydata$weeks
target.name = as.character(unique(est$Target))
location.name = as.character(unique(est$Location))
### National Score
nat.cdc.data = mydata$model$raw
bins = subset(est, (Location == "US National")&(Target == target.name[1])&(Type == "Bin"))$Bin_start_incl
bins = suppressWarnings(as.numeric(levels(bins))[bins])
# start week
nat.pot.st = subset(est, (Location == "US National")&(Target == target.name[1])&(Type == "Point"))$Value
temp = subset(est, (Location == "US National")&(Target == target.name[1])&(Type == "Bin"))$Value
index = which(temp !=0)
nat.prob.st = cbind(as.numeric(bins[index]), temp[index])
nat.res.sw = ScoreStartWeek(nat.cdc.data, nat.onset, week, nat.pot.st, nat.prob.st)
# peak week
nat.pot.pw = subset(est, (Location == "US National")&(Target == target.name[2])&(Type == "Point"))$Value
temp = subset(est, (Location == "US National")&(Target == target.name[2])&(Type == "Bin"))$Value
index = which(temp !=0)
nat.prob.pw = cbind(as.numeric(bins[index]), temp[index])
nat.res.pw = ScorePeakWeek(nat.cdc.data, week, nat.pot.pw, nat.prob.pw)
# peak intensity
nat.pot.pi = subset(est, (Location == "US National")&(Target == target.name[3])&(Type == "Point"))$Value
temp = subset(est, (Location == "US National")&(Target == target.name[3])&(Type == "Bin"))$Value
bin.pi = seq(from = 0, to = 13, by = 0.1)
nat.prob.pi = cbind(bin.pi, temp)
nat.res.pi = ScorePeakInty(nat.cdc.data, nat.pot.pi,nat.prob.pi)
# 4 week ahead forecast
nat.pot.fc = subset(est, (Location == "US National")&(Target %in% target.name[4:7])&(Type == "Point"))$Value
nat.prob.fc = bin.pi
for(wk in 1:4) {
nat.prob.fc = cbind(nat.prob.fc, subset(est, (Location == "US National")&(Target %in% target.name[wk+3])&(Type == "Bin"))$Value)
}
nat.res.fc = ScoreForecast(nat.cdc.data, nweeksFit, nweeksData, nat.pot.fc, nat.prob.fc)
### HHS region
reg.sw = NULL
reg.pw = NULL
reg.pi = NULL
reg.fc = NULL
for (reg.num in 1:10) {
reg.data = mydata$fit$raw[,reg.num]
# start week
pot.st = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.st = cbind(as.numeric(bins[index]), temp[index])
sw.res = ScoreStartWeek(reg.data, reg.onset[reg.num], week, pot.st, prob.st)
reg.sw = rbind(reg.sw, sw.res)
# peak week
pot.pw = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[2])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[2])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.pw = cbind(as.numeric(bins[index]), temp[index])
pw.res = ScorePeakWeek(reg.data, week, pot.pw, prob.pw)
reg.pw = rbind(reg.pw, pw.res)
# peak intensity
pot.pi = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Bin"))$Value
prob.pi = cbind(bin.pi, temp)
pi.res = ScorePeakInty(reg.data, pot.pi,prob.pi)
reg.pi = rbind(reg.pi, pi.res)
# forecast
pot.fc = subset(est, (Location == location.name[reg.num + 1])&(Target %in% target.name[4:7])&(Type == "Point"))$Value
prob.fc = bin.pi
for(wk in 1:4) {
prob.fc = cbind(prob.fc, subset(est, (Location == location.name[reg.num + 1])&(Target %in% target.name[wk+3])&(Type == "Bin"))$Value)
}
fc.res = ScoreForecast(reg.data, nweeksFit, nweeksData, pot.fc,prob.fc)
fc.res = cbind(rep(reg.num,4), fc.res)
reg.fc = rbind(reg.fc, fc.res)
}
row.names(reg.sw) = seq(1,10,1)
reg.sw = data.frame(seq(1,10,1),reg.sw)
names(reg.sw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pw) = seq(1,10,1)
reg.pw = data.frame(seq(1,10,1),reg.pw)
names(reg.pw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pi) = seq(1,10,1)
reg.pi = data.frame(seq(1,10,1),reg.pi)
names(reg.pi) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.fc) = seq(1,nrow(reg.fc),1)
reg.fc = as.data.frame(reg.fc)
names(reg.fc) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
# Create a csv file for the score of regional
a = data.frame(rep("Start week", 10), pot.st, reg.sw[,-1])
names(a)[1:2] = c("Target","Point Est")
hhs = seq(1,10,1)
a = cbind(hhs,a)
b = data.frame(rep("Peak week", 10), pot.pw, reg.pw[,-1])
names(b)[1:2] = c("Target","Point Est")
b = cbind(hhs,b)
c = data.frame(rep("Peak intensity", 10), pot.pi, reg.pi[,-1])
names(c)[1:2] = c("Target", "Point Est")
c = cbind(hhs,c)
fc = NULL
for(i in 1:10) {
for(j in 1:4) {
fc = c(fc, pot.fc[[i]][2,j])
}
}
d = data.frame(rep("Forecast", length(fc)), fc, reg.fc[-1])
names(d)[1:2] = c("Target","Point Est")
hhs = NULL
for(i in 1:10){
hhs = c(hhs,rep(i,4))
}
d = cbind(hhs,d)
score = rbind(a,b,c,d)
names(score)[1] = "Location"
score = as.matrix(score)
write.csv(score, file = "Regscore.csv",row.names = FALSE)
cat("See Regional score at: 'Regscore.csv'\n")
}
year.start = 2016
year.end   = 2017
mod_level = 2
fit_level = 3
dataType = 'cdc'
mydata = get.subset(mod_level=mod_level,fit_level=fit_level,dataType=dataType,
start.year = year.start,end.year=year.end, name = c(NAME_2 = "USA"))
est = read.csv("EW43-PSI-2016-11-07.csv")
getwd()
ScoreCsv(mydata, est, 16)
reg.fc
row.names(reg.sw) = seq(1,10,1)
reg.sw = data.frame(seq(1,10,1),reg.sw)
reg.sw
nat.onset = mydata$model$onset
reg.onset = as.numeric(mydata$fit$onset)
nweeksData = mydata$nweeksData
week = mydata$weeks
target.name = as.character(unique(est$Target))
location.name = as.character(unique(est$Location))
### National Score
nat.cdc.data = mydata$model$raw
bins = subset(est, (Location == "US National")&(Target == target.name[1])&(Type == "Bin"))$Bin_start_incl
bins = suppressWarnings(as.numeric(levels(bins))[bins])
# start week
nat.pot.st = subset(est, (Location == "US National")&(Target == target.name[1])&(Type == "Point"))$Value
temp = subset(est, (Location == "US National")&(Target == target.name[1])&(Type == "Bin"))$Value
index = which(temp !=0)
nat.prob.st = cbind(as.numeric(bins[index]), temp[index])
nat.res.sw = ScoreStartWeek(nat.cdc.data, nat.onset, week, nat.pot.st, nat.prob.st)
# peak week
nat.pot.pw = subset(est, (Location == "US National")&(Target == target.name[2])&(Type == "Point"))$Value
temp = subset(est, (Location == "US National")&(Target == target.name[2])&(Type == "Bin"))$Value
index = which(temp !=0)
nat.prob.pw = cbind(as.numeric(bins[index]), temp[index])
nat.res.pw = ScorePeakWeek(nat.cdc.data, week, nat.pot.pw, nat.prob.pw)
# peak intensity
nat.pot.pi = subset(est, (Location == "US National")&(Target == target.name[3])&(Type == "Point"))$Value
temp = subset(est, (Location == "US National")&(Target == target.name[3])&(Type == "Bin"))$Value
bin.pi = seq(from = 0, to = 13, by = 0.1)
nat.prob.pi = cbind(bin.pi, temp)
nat.res.pi = ScorePeakInty(nat.cdc.data, nat.pot.pi,nat.prob.pi)
# 4 week ahead forecast
nat.pot.fc = subset(est, (Location == "US National")&(Target %in% target.name[4:7])&(Type == "Point"))$Value
nat.prob.fc = bin.pi
for(wk in 1:4) {
nat.prob.fc = cbind(nat.prob.fc, subset(est, (Location == "US National")&(Target %in% target.name[wk+3])&(Type == "Bin"))$Value)
}
nat.res.fc = ScoreForecast(nat.cdc.data, nweeksFit, nweeksData, nat.pot.fc, nat.prob.fc)
### HHS region
reg.sw = NULL
reg.pw = NULL
reg.pi = NULL
reg.fc = NULL
for (reg.num in 1:10) {
reg.data = mydata$fit$raw[,reg.num]
# start week
pot.st = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[1])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.st = cbind(as.numeric(bins[index]), temp[index])
sw.res = ScoreStartWeek(reg.data, reg.onset[reg.num], week, pot.st, prob.st)
reg.sw = rbind(reg.sw, sw.res)
# peak week
pot.pw = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[2])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[2])&(Type == "Bin"))$Value
index = which(temp !=0)
prob.pw = cbind(as.numeric(bins[index]), temp[index])
pw.res = ScorePeakWeek(reg.data, week, pot.pw, prob.pw)
reg.pw = rbind(reg.pw, pw.res)
# peak intensity
pot.pi = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Point"))$Value
temp = subset(est, (Location == location.name[reg.num + 1])&(Target == target.name[3])&(Type == "Bin"))$Value
prob.pi = cbind(bin.pi, temp)
pi.res = ScorePeakInty(reg.data, pot.pi,prob.pi)
reg.pi = rbind(reg.pi, pi.res)
# forecast
pot.fc = subset(est, (Location == location.name[reg.num + 1])&(Target %in% target.name[4:7])&(Type == "Point"))$Value
prob.fc = bin.pi
for(wk in 1:4) {
prob.fc = cbind(prob.fc, subset(est, (Location == location.name[reg.num + 1])&(Target %in% target.name[wk+3])&(Type == "Bin"))$Value)
}
fc.res = ScoreForecast(reg.data, nweeksFit, nweeksData, pot.fc,prob.fc)
fc.res = cbind(rep(reg.num,4), fc.res)
reg.fc = rbind(reg.fc, fc.res)
}
row.names(reg.sw) = seq(1,10,1)
reg.sw
reg.sw = data.frame(seq(1,10,1),reg.sw)
names(reg.sw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pw) = seq(1,10,1)
reg.pw = data.frame(seq(1,10,1),reg.pw)
names(reg.pw) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.pi) = seq(1,10,1)
reg.pi = data.frame(seq(1,10,1),reg.pi)
names(reg.pi) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
row.names(reg.fc) = seq(1,nrow(reg.fc),1)
reg.fc = as.data.frame(reg.fc)
names(reg.fc) = c("HHS Region", "Actual Value", "Log score", "Absolute error")
