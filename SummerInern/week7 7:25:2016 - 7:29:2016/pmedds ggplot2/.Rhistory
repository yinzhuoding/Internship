geom_vline(xintercept = nweeksFit, col = "thistle2", size = 3)
}
p2 = p2 +
annotate("text", label = c("--- Best MCMC   ","--- Random MCMC   "), col = c("forestgreen","lightgreen"),
x = c(Inf,Inf), y = c(Inf,Inf), hjust = c(1,1), vjust = c(2.5,4),
family = "serif", size = 4.5)
g1 = ggplot_gtable(ggplot_build(p1))
g2 = ggplot_gtable(ggplot_build(p2))
pp = c(subset(g1$layout, name == "panel", se = t:r))
plot = gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia = which(g2$layout$name == "axis-l")
ga = g2$grobs[[ia]]
ax = ga$children[[2]]
ax$widths = rev(ax$widths)
ax$grobs = rev(ax$grobs)
plot = gtable_add_cols(plot, g2$widths[g2$layout[ia, ]$l], length(plot$widths) - 1)
plot = gtable_add_grob(plot, ax, pp$t, length(plot$widths) - 1, pp$b)
plot = gtable_add_grob(plot, g2$grobs[[7]], pp$t, length(plot$widths), pp$b)
bp1 = ggplot(data = NULL) +
scale_x_continuous(name = "", limits = c(-1,1)) +
scale_y_continuous(name = "", limits = c(0.00001,1), trans = 'log10') +
geom_boxplot(aes(x = 0, y = pC.vec), width = 1.5) +
ggtitle("pC") +
theme_bw() %+replace%
theme(panel.background = element_rect(fill = NA)) +
theme(text = element_text(color = "grey10"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = unit(c(2,1,1,0), "cm")) +
coord_fixed(ratio = 2)
bp2 = ggplot(data = NULL) +
scale_x_continuous(name = "", limits = c(-1,1)) +
scale_y_continuous(name = "", limits = c(0.5,5)) +
geom_boxplot(aes(x = 0, y = Roft.vec), width = 1.5) +
ggtitle("R0") +
theme_bw() %+replace%
theme(panel.background = element_rect(fill = NA)) +
theme(text = element_text(color = "grey10"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = unit(c(1,1,2,0), "cm")) +
coord_fixed(ratio = 2)
grid.arrange(plot,bp1,bp2,ncol = 5,
layout_matrix = cbind(c(1,1),c(1,1),c(1,1),c(1,1),c(2,3)))
if (device.name == "pdf" | device.name == "PDF" | device.name=="png" | device.name=="PNG") dev.off()
if (device.name == "X11") return()
# now make the same plots for a PNG file
if (device.name == "pdf" | device.name== "PDF" | device.name=="png" | device.name=="PNG") {
fname <- paste(fbase,".png",sep="")
png(file=fname,width=620,height=420)
cat("\n PNG Plot of MCMC Profiles written to: ",fname,"\n")
text <- paste(" PNG Plot of MCMC Profiles written to: ",fname,"\n",sep="")
writeLines(text=text,con=log)
}  else {
dev.next()
dev.new()
}
p1 = ggplot(data = NULL) +
scale_x_continuous(name = xlab.title, limits = c(1,nweeks),
breaks = breaks, labels = labels) +
scale_y_continuous(name = "Incidence", limits = c(0, ymax)) +
ggtitle(title) +
theme_bw() +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10),
axis.text.y = element_text(face = "italic", size = 10),
axis.title.x = element_text(face = "plain", size = 12, family = "serif"),
axis.title.y = element_text(face = "plain", size = 12, family = "serif"),
plot.title = element_text(face = "bold", size = 15, family = "Times"),
plot.margin = unit(c(1,1,1,1), "cm"))
#In grey we plot 100 random estimates from the best chain
#In Blue we plot the best estimate from the best chain
#Red is the EPI profile we are fitting
irnd <- dim(rnd.dsdt)[2]
step = max(1,irnd/100)
ix.set = seq(from = 1, to = irnd, by = step)
dat.rnd = rnd.dsdt[1:nweeksFit,ix.set]
dat.rnd.pred = rnd.dsdt[nweeksFit:nweeks,ix.set]
data.rnd = melt(dat.rnd)
data.rnd.pred = melt(dat.rnd.pred)
p1 = p1 +
geom_line(aes(x = data.rnd[,1], y = data.rnd[,3], group = data.rnd[,2]), col = "grey", size = 2, alpha = 0.4,na.rm = TRUE) +
geom_line(aes(x = 1:nweeksFit, y = epi[1:nweeksFit]), col = "violetred", size = 1) +
geom_line(aes(x = 1:nweeksFit, y = dsdt[1:nweeksFit]), col = "royalblue", size = 1)
if (nweeksFit < nweeks) {
p1 = p1 +
geom_line(aes(x = (data.rnd.pred[,1] + nweeksFit - 1), y = data.rnd.pred[,3], group = data.rnd.pred[,2]), col = "grey", size = 2, linetype = 2,alpha = 0.4, na.rm = TRUE) +
geom_line(aes(x = nweeksFit:nweeks, y = epi[nweeksFit:nweeks]), col = "violetred", size = 1, linetype = 2) +
geom_line(aes(x = nweeksFit:nweeks, y = dsdt[nweeksFit:nweeks]), col = "royalblue", size = 1, linetype = 2)
}
# for models that take the school schedule into account we will plot it
if (imodel == 1 | imodel == 3) {
factor <- 0.5 * max(epi,dsdt,na.rm=TRUE)
p1 = p1 +
geom_point(aes(x = 1:nweeks, y = school*factor), pch = 20, col = "turquoise",size = 4, na.rm = TRUE)
}
p1 = p1 +
annotate("text", label = c("   --- Data","   --- Best MCMC","   --- Random MCMC"), col = c("violetred","royalblue","grey"),
x = c(-Inf,-Inf,-Inf), y = c(Inf,Inf,Inf), hjust = c(0,0,0), vjust = c(2.5,4,5.5),
family = "serif", size = 4.5)
R.ylim=c(0,4)
R.ylim=c(min(roft,rnd.rvec,na.rm=TRUE)*0.8,max(roft,rnd.rvec,na.rm=TRUE)*1.2)
p2 = ggplot(data = NULL) +
scale_x_continuous(name = "",limits = c(1,nweeks)) +
scale_y_continuous(name = "R(t)", limits = R.ylim) +
theme_bw() %+replace%
theme(panel.background = element_rect(fill = NA)) +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10),
axis.text.y = element_text(face = "italic", color = "lightgreen", size = 10),
axis.title.y = element_text(face = "plain", color = "lightgreen",size = 12, family = "serif"),
plot.margin = unit(c(1,1,1,1), "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
dat_rnd = rnd.rvec[1:nweeksFit,ix.set]
dat_rnd_pred = rnd.rvec[nweeksFit:nweeks,ix.set]
data_rnd = melt(dat_rnd)
data_rnd_pred = melt(dat_rnd_pred)
p2 = p2 +
geom_line(aes(x = data_rnd[,1], y = data_rnd[,3], group = data_rnd[,2]), col = "lightgreen", size = 2, alpha = 0.4,na.rm = TRUE) +
geom_line(aes(x = 1:nweeksFit, y = roft[1:nweeksFit]), col = "forestgreen", size = 1)
if (nweeksFit < nweeks) {
p2 = p2 +
geom_line(aes(x = (data_rnd_pred[,1] + nweeksFit - 1), y = data_rnd_pred[,3], group = data_rnd_pred[,2]), col = "lightgreen", size = 2, linetype = 2,alpha = 0.2, na.rm = TRUE) +
geom_line(aes(x = nweeksFit:nweeks, y = roft[nweeksFit:nweeks]), col = "forestgreen", size = 1, linetype = 2) +
geom_vline(xintercept = nweeksFit, col = "thistle2", size = 3)
}
p2 = p2 +
annotate("text", label = c("--- Best MCMC   ","--- Random MCMC   "), col = c("forestgreen","lightgreen"),
x = c(Inf,Inf), y = c(Inf,Inf), hjust = c(1,1), vjust = c(2.5,4),
family = "serif", size = 4.5)
g1 = ggplot_gtable(ggplot_build(p1))
g2 = ggplot_gtable(ggplot_build(p2))
pp = c(subset(g1$layout, name == "panel", se = t:r))
plot = gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
ia = which(g2$layout$name == "axis-l")
ga = g2$grobs[[ia]]
ax = ga$children[[2]]
ax$widths = rev(ax$widths)
ax$grobs = rev(ax$grobs)
plot = gtable_add_cols(plot, g2$widths[g2$layout[ia, ]$l], length(plot$widths) - 1)
plot = gtable_add_grob(plot, ax, pp$t, length(plot$widths) - 1, pp$b)
plot = gtable_add_grob(plot, g2$grobs[[7]], pp$t, length(plot$widths), pp$b)
bp1 = ggplot(data = NULL) +
scale_x_continuous(name = "", limits = c(-1,1)) +
scale_y_continuous(name = "", limits = c(0.00001,1), trans = 'log10') +
geom_boxplot(aes(x = 0, y = pC.vec), width = 1.5) +
ggtitle("pC") +
theme_bw() %+replace%
theme(panel.background = element_rect(fill = NA)) +
theme(text = element_text(color = "grey10"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = unit(c(2,1,1,0), "cm")) +
coord_fixed(ratio = 2)
bp2 = ggplot(data = NULL) +
scale_x_continuous(name = "", limits = c(-1,1)) +
scale_y_continuous(name = "", limits = c(0.5,5)) +
geom_boxplot(aes(x = 0, y = Roft.vec), width = 1.5) +
ggtitle("R0") +
theme_bw() %+replace%
theme(panel.background = element_rect(fill = NA)) +
theme(text = element_text(color = "grey10"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = unit(c(1,1,2,0), "cm")) +
coord_fixed(ratio = 2)
grid.arrange(plot,bp1,bp2,ncol = 5,
layout_matrix = cbind(c(1,1),c(1,1),c(1,1),c(1,1),c(2,3)))
if (device.name == "pdf" | device.name == "PDF" | device.name=="png" | device.name=="PNG") dev.off()
}
plot.results.mcmc.ggplot2(myName=mydata$dataName,job.year=job.year,imodel=ptab$model,
nweeksFit = 45,nweeksData = mydata$nweeksData,
weeks=mydata$weeks,epi=mydata$cases,sh=mydata$sh,school=mydata$school,
dsdt=dsdt,roft=rmat,rnd.dsdt=rnd.dsdt,rnd.rvec=rnd.rvec,
boxplot.data = boxplot.data,device.name=ptab$device,log=logfile)
rm(list = ls())
load(file = "pmedds_plot_inputs.RData")
logfile = file(description="log.txt",open="wt")
subDir = file.path(getwd(), "output")
plot.mcmc.chain(tab=sol$tab,model=model,ireal=ix,myName=mydata$dataName,device.name=ptab$device,log=logfile)
plot.mcmc.chain.ggplot2 <- function(tab=NULL,model=NULL,ireal=1, myName="",device.name="X11",log=log, subDir = file.path(getwd(), "output")) {
nparam  <- length(model$vecnames)
tab <- matrix(tab,nc=(nparam+1))
colnames(tab) <- c(model$vecnames,"AICc")
vecnames <- model$vecnames
vecopt   <- model$vecopt
zipname  <- myName
iburn    <-  1 # dim(tab)[1]/2 plot the complete chain
tab.plot <- tab[iburn:dim(tab)[1],c(vecopt,"AICc")]
nopt <- length(vecopt)
nc = 2
if (nopt %% 2 == 0) {
nr = nopt/2
} else {
nr = (nopt+1)/2
}
title ="MCMC Chains"
# check to see if "data" sub-directory exists, if not create it
if (!dir.exists(subDir)) {
dir.create(file.path(subDir))
cat(" Created ", subDir, "Directory for all the Data of MCMC chain \n")
text <- paste(" Created ", subDir, "Directory for all the Data of MCMC chain","\n",sep="")
writeLines(text=text,con=log)
}
fbase <- file.path(subDir,paste("chain-",myName,"-",ireal,sep=""))
if (device.name == "pdf" | device.name== "PDF" | device.name=="png" | device.name=="PNG") {
fname <- paste(fbase,".pdf",sep="")
pdf(file=fname,width=9,height=7)
cat("\n PDF Plot of MCMC Chain written to: ",fname,"\n")
text <- paste(" PDF Plot of MCMC Chain written to: ",fname,"\n",sep="")
writeLines(text=text,con=log)
}  else {
dev.next()
dev.new()
}
title = paste("MCMC Chain Number: ",ireal,sep="")
plotlist = list()
for (i in 1:(nopt+1)) {
ylab = colnames(tab.plot)[i]
ymin = model$model$par.min[ylab]
ymax = model$model$par.max[ylab]
main = ""
if (i == 1) main=title
plotlist[[i]] = ggplot(data = NULL) +
scale_x_continuous(name = "") +
scale_y_continuous(name = ylab, limits =c(ymin,ymax)) +
ggtitle(main) +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10),
axis.text.y = element_text(face = "italic", size = 10),
axis.title.x = element_text(face = "plain", size = 12, family = "serif"),
axis.title.y = element_text(face = "plain", size = 12, family = "serif"),
plot.title = element_text(face = "bold", size = 15, family = "Times")) +
geom_point(aes_string(x = 1:length(tab.plot[,i]), y = tab.plot[,i]))
}
layout = matrix(seq(1,nr*nc,1), nrow = nr, byrow = FALSE)
multiplot(plotlist = plotlist, layout = layout)
if (device.name == "pdf" | device.name == "PDF" | device.name=="png" | device.name=="PNG") dev.off()
if (device.name == "X11") return()
#repeat with png file
if (device.name == "pdf" | device.name== "PDF" | device.name=="png" | device.name=="PNG") {
fname <- paste(fbase,".png",sep="")
png(file=fname,width=620,height=600)
cat("\n PNG Plot of MCMC Chain written to: ",fname,"\n")
text <- paste(" PNG Plot of MCMC Chain written to: ",fname,"\n",sep="")
writeLines(text=text,con=log)
}  else {
dev.next()
dev.new()
}
plotlist = list()
for (i in 1:(nopt+1)) {
ylab = colnames(tab.plot)[i]
ymin = model$model$par.min[ylab]
ymax = model$model$par.max[ylab]
main = ""
if (i == 1) main=title
plotlist[[i]] = ggplot(data = NULL) +
scale_x_continuous(name = "") +
scale_y_continuous(name = ylab, limits =c(ymin,ymax)) +
ggtitle(main) +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10),
axis.text.y = element_text(face = "italic", size = 10),
axis.title.x = element_text(face = "plain", size = 12, family = "serif"),
axis.title.y = element_text(face = "plain", size = 12, family = "serif"),
plot.title = element_text(face = "bold", size = 15, family = "Times")) +
geom_point(aes_string(x = 1:length(tab.plot[,i]), y = tab.plot[,i]))
}
layout = matrix(seq(1,nr*nc,1), nrow = nr, byrow = FALSE)
multiplot(plotlist = plotlist, layout = layout)
if (device.name == "pdf" | device.name == "PDF" | device.name=="png" | device.name=="PNG") dev.off()
}
plot.mcmc.chain.ggplot2(tab=sol$tab,model=model,ireal=ix,myName=mydata$dataName,device.name=ptab$device,log=logfile)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
plot.mcmc.chain.ggplot2(tab=sol$tab,model=model,ireal=ix,myName=mydata$dataName,device.name=ptab$device,log=logfile)
rm(list = ls())
load(file = "pmedds_plot_inputs.RData")
logfile = file(description="log.txt",open="wt")
subDir = file.path(getwd(), "output")
plot.car.mcmc(myName=mydata$dataName,job.year=job.year,imodel=ptab$model,
nweeksFit=45,nweeksData=mydata$nweeksData,weeks=mydata$weeks,
epi=mydata$cases,dsdt=dsdt[,iBest],rnd.dsdt=rnd.dsdt,
device.name=ptab$device,log=logfile, subDir = outputDir)
plot.car.mcmc.ggplot2 <- function(myName="",job.year=2009,imodel=5,nweeksFit=NULL,nweeksData=52,weeks=NULL,epi=NULL,dsdt=NULL,rnd.dsdt=NULL,device.name="pdf",log=NULL, subDir = file(getwd(), "output")) {
nweeks <- length(weeks)
if (is.null(nweeksFit)) nweeksFit=nweeks
title = paste(" Cumulative Attack Rate - ",myName,sep="")
# check to see if "data" sub-directory exists, if not create it
if (!dir.exists(subDir)) {
dir.create(file.path(subDir))
cat(" Created ", subDir, "Directory for all the Data of MCMC chain \n")
text <- paste(" Created ", subDir, "Directory for all the Data of MCMC chain","\n",sep="")
writeLines(text=text,con=log)
}
fbase <- paste(subDir,"/car-",myName,sep="")
if (device.name == "pdf" | device.name== "PDF" | device.name=="png" | device.name=="PNG") {
fname <- paste(fbase,".pdf",sep="")
pdf(file=fname,width=9,height=7)
cat("\n PDF Plot of MCMC Cumulative Attack Rate written to: ",fname,"\n")
text <- paste(" PDF Plot of MCMC Cumulative Attack Rate written to: ",fname,"\n",sep="")
writeLines(text=text,con=log)
}  else {
dev.next()
dev.new()
}
cumsum.epi <- cumsum(epi)
# For the current season if the number of data points is less than the season duration
if (nweeksData < nweeks) cumsum.epi[(nweeksData+1):nweeks] = NA
rnd.reals = dim(rnd.dsdt)[2]
cumsum <- matrix(data = 0.0, nrow = unlist(nweeks), ncol = unlist(rnd.reals))
for (i in 1:rnd.reals) {
cumsum[,i] <- cumsum(rnd.dsdt[,i])
}
ylim <- c(0,max(cumsum.epi,cumsum,na.rm=TRUE))
xtitle = paste("Week Number FY ",job.year,"-",job.year+1,sep="")
breaks = seq(1,nweeks,4)
labels = weeks[breaks]
p = ggplot(data = NULL) +
scale_x_continuous(name = xtitle, limits = c(1,nweeks),
breaks = breaks, labels = labels) +
scale_y_continuous(name = "C.A.R.", limits =ylim) +
ggtitle(title) +
theme_bw() +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10),
axis.text.y = element_text(face = "italic", size = 10),
axis.title.x = element_text(face = "plain", size = 12, family = "serif"),
axis.title.y = element_text(face = "plain", size = 12, family = "serif"),
plot.title = element_text(face = "bold", size = 15, family = "Times"),
plot.margin = unit(c(1,1,1,1), "cm"))
#grey are the random selections from this best chain
#blue is the best result from the best chain
#red is the c.a.r. of the EPI profile we fitted
rnd.reals = dim(rnd.dsdt)[2]
step = max(1,rnd.reals/100)
ix.set = seq(from = 1, to = rnd.reals, by = step)
dat.rnd = cumsum[1:nweeksFit,ix.set]
dat.rnd.pred = cumsum[nweeksFit:nweeks,ix.set]
data.rnd = melt(dat.rnd)
data.rnd.pred = melt(dat.rnd.pred)
p = p +
geom_line(aes(x = data.rnd[,1], y = data.rnd[,3], group = data.rnd[,2]), col = "grey", size = 2, alpha = 0.4,na.rm = TRUE) +
geom_line(aes(x = 1:nweeksFit, y = cumsum(dsdt[1:nweeksFit])), col = "royalblue", size = 1) +
geom_line(aes(x = 1:nweeksFit, y = cumsum.epi[1:nweeksFit]), col = "violetred", size = 1)
if (nweeksFit < nweeks) {
p = p +
geom_line(aes(x = (data.rnd.pred[,1] + nweeksFit - 1), y = data.rnd.pred[,3], group = data.rnd.pred[,2]), col = "grey", size = 2, linetype = 2,alpha = 0.4, na.rm = TRUE) +
geom_line(aes(x = 1:nweeks, y = cumsum(dsdt[1:nweeks])), col = "royalblue", size = 1, linetype = 2) +
geom_line(aes(x = nweeksFit:nweeks, y = cumsum.epi[nweeksFit:nweeks]), col = "violetred", size = 1, linetype = 2, na.rm = TRUE) +
geom_vline(xintercept = nweeksFit, col = "thistle2", size = 3, alpha = 0.7)
}
p = p +
annotate("text", label = c("   --- Data","   --- Best MCMC","   --- Random MCMC"), col = c("violetred","royalblue","grey"),
x = c(-Inf,-Inf,-Inf), y = c(Inf,Inf,Inf), hjust = c(0,0,0), vjust = c(2.5,4,5.5),
family = "serif", size = 4.5)
print(p)
if (device.name == "pdf" | device.name == "PDF" | device.name=="png" | device.name=="PNG") dev.off()
if (device.name=="X11") return()
# now make the same plots for a PNG file
if (device.name == "pdf" | device.name== "PDF" | device.name=="png" | device.name=="PNG") {
fname <- paste(fbase,".png",sep="")
png(file=fname,width=620,height=420)
cat("\n PNG Plot of MCMC Cumulative Attack Rate written to: ",fname,"\n")
text <- paste(" PNG Plot of MCMC Cumulative Attack Rate written to: ",fname,"\n",sep="")
writeLines(text=text,con=log)
}  else {
dev.next()
dev.new()
}
breaks = seq(1,nweeks,4)
labels = weeks[breaks]
p = ggplot(data = NULL) +
scale_x_continuous(name = xtitle, limits = c(1,nweeks),
breaks = breaks, labels = labels) +
scale_y_continuous(name = "C.A.R.", limits =ylim) +
ggtitle(title) +
theme_bw() +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10),
axis.text.y = element_text(face = "italic", size = 10),
axis.title.x = element_text(face = "plain", size = 12, family = "serif"),
axis.title.y = element_text(face = "plain", size = 12, family = "serif"),
plot.title = element_text(face = "bold", size = 15, family = "Times"),
plot.margin = unit(c(1,1,1,1), "cm"))
#grey are the random selections from this best chain
#blue is the best result from the best chain
#red is the c.a.r. of the EPI profile we fitted
rnd.reals = dim(rnd.dsdt)[2]
step = max(1,rnd.reals/100)
ix.set = seq(from = 1, to = rnd.reals, by = step)
dat.rnd = cumsum[1:nweeksFit,ix.set]
dat.rnd.pred = cumsum[nweeksFit:nweeks,ix.set]
data.rnd = melt(dat.rnd)
data.rnd.pred = melt(dat.rnd.pred)
p = p +
geom_line(aes(x = data.rnd[,1], y = data.rnd[,3], group = data.rnd[,2]), col = "grey", size = 2, alpha = 0.4,na.rm = TRUE) +
geom_line(aes(x = 1:nweeksFit, y = cumsum(dsdt[1:nweeksFit])), col = "royalblue", size = 1) +
geom_line(aes(x = 1:nweeksFit, y = cumsum.epi[1:nweeksFit]), col = "violetred", size = 1)
if (nweeksFit < nweeks) {
p = p +
geom_line(aes(x = (data.rnd.pred[,1] + nweeksFit - 1), y = data.rnd.pred[,3], group = data.rnd.pred[,2]), col = "grey", size = 2, linetype = 2,alpha = 0.4, na.rm = TRUE) +
geom_line(aes(x = 1:nweeks, y = cumsum(dsdt[1:nweeks])), col = "royalblue", size = 1, linetype = 2) +
geom_line(aes(x = nweeksFit:nweeks, y = cumsum.epi[nweeksFit:nweeks]), col = "violetred", size = 1, linetype = 2, na.rm = TRUE) +
geom_vline(xintercept = nweeksFit, col = "thistle2", size = 3, alpha = 0.7)
}
p = p +
annotate("text", label = c("   --- Data","   --- Best MCMC","   --- Random MCMC"), col = c("violetred","royalblue","grey"),
x = c(-Inf,-Inf,-Inf), y = c(Inf,Inf,Inf), hjust = c(0,0,0), vjust = c(2.5,4,5.5),
family = "serif", size = 4.5)
print(p)
if (device.name == "pdf" | device.name == "PDF" | device.name=="png" | device.name=="PNG") dev.off()
}
plot.car.mcmc.ggplot2(myName=mydata$dataName,job.year=job.year,imodel=ptab$model,
nweeksFit=45,nweeksData=mydata$nweeksData,weeks=mydata$weeks,
epi=mydata$cases,dsdt=dsdt[,iBest],rnd.dsdt=rnd.dsdt,
device.name=ptab$device,log=logfile, subDir = outputDir)
rm(list = ls())
load(file = "pmedds_WT_plot_inputs.RData")
logfile = file(description="log-wt.txt",open="wt")
subDir = file.path(getwd(), "output")
success <- wt.plot.results(mycountry=mydata$mycountry,cases.order=cases.order,Rlq.order=Rlq.order,Rlm.order=Rlm.order,Rlmd.order=Rlmd.order,dates=dates.vec,device=device,log=logfile,subDir=subDir)
wt.plot.results.ggplot2 <- function(mycountry=NULL,cases.order=NULL,Rlq.order=NULL,Rlm.order=NULL,Rlmd.order=NULL,dates=NULL,device="X11",log=NULL,subDir=file.path(getwd(), "output")) {
# check to see if "data" sub-directory exists, if not create it
if (!dir.exists(subDir)) {
dir.create(file.path(subDir))
cat(" Created ", subDir, "Directory for all the Data of the W-T Data \n")
text <- paste(" Created ", subDir, " Directory for all the W-T Data","\n",sep="")
writeLines(text=text,con=log)
}
if (device == "PDF" | device == "pdf") {
pdfname = paste(subDir,"/W_T_",mycountry,".pdf",sep="")
pdf(file=pdfname,onefile=TRUE,paper="a4r",width=11.5,height=8)
cat(" Plotting Results to: ",pdfname,"\n")
text <- paste(" Plotting Results to: ",pdfname,"\n",sep="")
writeLines(text=text,con=log)
}
if (mycountry == "China") {
title=paste("Probable cases of SARS by date of report - ",mycountry,sep="")
} else {
title=paste("Probable cases of SARS by date of onset - ",mycountry,sep="")
}
breaks = cases.order[1,]
labels = as.character(dates[cases.order[1,]])
xmin = min(cases.order[1,]) - 1
xmax = max(cases.order[1,]) + 1
p1 = ggplot(data = NULL) +
scale_x_continuous(name = "", limits = c(xmin,xmax),
breaks = breaks, labels = labels) +
scale_y_continuous(name = "Cases") +
ggtitle(title) +
theme_bw() +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10, angle = 90),
axis.text.y = element_text(face = "italic", size = 10),
axis.title.x = element_text(face = "plain", size = 12, family = "serif"),
axis.title.y = element_text(face = "plain", size = 12, family = "serif"),
plot.title = element_text(face = "bold", size = 15, family = "Times"))
p1 = p1 + geom_linerange(aes(x = cases.order[1,],ymax = cases.order[2,]), ymin = 0, col = "deeppink")
title="Estimated daily reproduction number (95% CI, mean-red and median-green)"
p2 = ggplot(data = NULL) +
scale_x_continuous(name = "", limits = c(xmin,xmax),
breaks = breaks, labels = labels) +
scale_y_continuous(name = "Reproduction Number",limits = c(0,14)) +
ggtitle(title) +
theme_bw() +
theme(text = element_text(color = "grey10"),
axis.text.x = element_text(face = "italic", size = 10, angle = 90),
axis.text.y = element_text(face = "italic", size = 10),
axis.title.x = element_text(face = "plain", size = 12, family = "serif"),
axis.title.y = element_text(face = "plain", size = 12, family = "serif"),
plot.title = element_text(face = "bold", size = 15, family = "Times"))
ymax = Rlq.order[2,]
for(i in 1:length(ymax)) {
ymax[i] = min(14,ymax[i])
}
p2 = p2 + geom_linerange(aes(x = Rlq.order[1,],ymax = ymax), ymin = 0, col = "mediumpurple") +
geom_point(aes(x = Rlm.order[1,], y = Rlm.order[2,]), col = "deeppink", alpha = 0.7, na.rm = TRUE) +
geom_point(aes(x = Rlmd.order[1,], y = Rlmd.order[2,]), col = "forestgreen", alpha = 0.7,na.rm = TRUE) +
geom_hline(yintercept = 1, col = "grey")
grid.arrange(p1,p2,nrow = 2)
if (device == "PDF" | device == "pdf") dev.off()
}
success <- wt.plot.results.ggplot2(mycountry=mydata$mycountry,cases.order=cases.order,Rlq.order=Rlq.order,Rlm.order=Rlm.order,Rlmd.order=Rlmd.order,dates=dates.vec,device=device,log=logfile,subDir=subDir)
