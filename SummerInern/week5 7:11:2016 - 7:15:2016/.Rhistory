region[[7]] = c("Hunan","Hubei","Guizhou","Yunnan")
region[[8]] = "Xinjiang Uygur"
region[[9]] = "Xizang"
index = list()
for(i in 1:length(region)) {
index[[i]] = which(port1$NAME_1 %in% region[[i]])
port1$col[index[[i]]] = factor(paste("Region",i,sep = ""))
}
port1$col
i = 9
index[[i]] = which(port1$NAME_1 %in% region[[i]])
index[[i]]
factor(paste("Region",i,sep = ""))
port1$col[index[[i]]] = factor(paste("Region",i,sep = ""))
port1$col[index[[i]]]
i = 9
index[[i]] = which(port1$NAME_1 %in% region[[i]])
factor(as.character(paste("Region",i,sep = "")))
port1$col[index[[i]]] = factor(as.character(paste("Region",i,sep = "")))
port1$col[index[[i]]]
index[[i]] = which(port1$NAME_1 %in% region[[i]])
(port1$col)[index[[i]]] = factor(as.character(paste("Region",i,sep = "")))
index[[i]]
region = list()
region[[1]] = c("Heilongjiang","Jilin","Liaoning")
region[[2]] = c("Beijing","Tianjin","Henan","Hebei","Shandong","Shanxi")
region[[3]] = c("Jiangsu","Zhejiang","Shanghai","Anhui")
region[[4]] = c("Fujian","Guangdong","Guangxi","Jiangxi","Hainan")
port1 = getData('GADM', country = 'CHN', level = 1)
table(port1$NAME_1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
## fills the map basing on variable NAME_1
region = list()
region[[1]] = c("Heilongjiang","Jilin","Liaoning")
region[[2]] = c("Beijing","Tianjin","Henan","Hebei","Shandong","Shanxi")
region[[3]] = c("Jiangsu","Zhejiang","Shanghai","Anhui")
region[[4]] = c("Fujian","Guangdong","Guangxi","Jiangxi","Hainan")
region[[5]] = c("Shaanxi","Gansu","Ningxia Hui","Nei Mongol")
region[[6]] = c("Sichuan","Chongqing","Qinghai")
region[[7]] = c("Hunan","Hubei","Guizhou","Yunnan")
region[[8]] = "Xinjiang Uygur"
region[[9]] = "Xizang"
index = list()
index = list()
for(i in 1:length(region)) {
i = 9
index[[i]] = which(port1$NAME_1 %in% region[[i]])
port1$col[index[[i]]] = factor(as.character(paste("Region",i,sep = "")))
}
index = list()
for(i in 1:length(region)) {
index[[i]] = which(port1$NAME_1 %in% region[[i]])
port1$col[index[[i]]] = factor(as.character(paste("Region",i,sep = "")))
}
index = list()
for(i in 1:length(region)) {
index[[i]] = which(port1$NAME_1 %in% region[[i]])
port1$col[index[[i]]] = factor(as.character(paste("Region",i,sep = "")))
}
which(port1$NAME_1 %in% region[[i]])
index[[i]] = which(port1$NAME_1 %in% region[[i]])
port1$col[index[[i]]] = factor(as.character(paste("Region",i,sep = "")))
port1 = getData('GADM', country = 'CHN', level = 1)
table(port1$NAME_1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
## fills the map basing on variable NAME_1
region = list()
region[[1]] = c("Heilongjiang","Jilin","Liaoning")
region[[2]] = c("Beijing","Tianjin","Henan","Hebei","Shandong","Shanxi")
region[[3]] = c("Jiangsu","Zhejiang","Shanghai","Anhui")
region[[4]] = c("Fujian","Guangdong","Guangxi","Jiangxi","Hainan")
region[[5]] = c("Shaanxi","Gansu","Ningxia Hui","Nei Mongol")
region[[6]] = c("Sichuan","Chongqing","Qinghai")
region[[7]] = c("Hunan","Hubei","Guizhou","Yunnan")
region[[8]] = "Xinjiang Uygur"
region[[9]] = "Xizang"
index = list()
for(i in 1:length(region)) {
index[[i]] = which(port1$NAME_1 %in% region[[i]])
port1$col[index[[i]]] = factor(as.character(paste("Region",i,sep = "")))
}
port1 = getData('GADM', country = 'CHN', level = 1)
table(port1$NAME_1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
## fills the map basing on variable NAME_1
region = list()
region[[1]] = c("Heilongjiang","Jilin","Liaoning")
region[[2]] = c("Beijing","Tianjin","Henan","Hebei","Shandong","Shanxi")
region[[3]] = c("Jiangsu","Zhejiang","Shanghai","Anhui")
region[[4]] = c("Fujian","Guangdong","Guangxi","Jiangxi","Hainan")
region[[5]] = c("Shaanxi","Gansu","Ningxia Hui","Nei Mongol")
region[[6]] = c("Sichuan","Chongqing","Qinghai")
region[[7]] = c("Hunan","Hubei","Guizhou","Yunnan")
region[[8]] = "Xinjiang Uygur"
region[[9]] = "Xizang"
province.list = port1$NAME_1
province.list = port1$NAME_1
nprovince = length(province.list)
province.list
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
province.list
port1 = getData('GADM', country = 'CHN', level = 1)
table(port1$NAME_1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
## fills the map basing on variable NAME_1
region_list = list(Region1 = c("Heilongjiang","Jilin","Liaoning"),
Region2 = c("Beijing","Tianjin","Henan","Hebei","Shandong","Shanxi"),
Region3 = c("Jiangsu","Zhejiang","Shanghai","Anhui"),
Region4 = c("Fujian","Guangdong","Guangxi","Jiangxi","Hainan"),
Region5 = c("Shaanxi","Gansu","Ningxia Hui","Nei Mongol"),
Region6 = c("Sichuan","Chongqing","Qinghai"),
Region7 = c("Hunan","Hubei","Guizhou","Yunnan"),
Region8 = "Xinjiang Uygur",
Region9 = "Xizang")
province.list = port1$NAME_1
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
col = seq(1,10,1)
province.list = port1$NAME_1
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
for(j in 1:nprovince) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
port1$col[index] = col[j]
}
col = rainbow(9)
province.list = port1$NAME_1
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
for(j in 1:nprovince) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
}
prov.col = NULL
for(j in 1:nprovince) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
}
prov.col = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
}
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
#xlim = range(-10,-6), ylim = range(36.9,42.2),
asp = 1.0)
ï¼Ÿspplot
?spplot
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
#xlim = range(-10,-6), ylim = range(36.9,42.2),
asp = 1.0, zcol = 0)
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
#xlim = range(-10,-6), ylim = range(36.9,42.2),
asp = 1.0, zcol = 1)
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
#xlim = range(-10,-6), ylim = range(36.9,42.2),
asp = 1.0, zcol = "1")
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
#xlim = range(-10,-6), ylim = range(36.9,42.2),
asp = 1.0,zcol = "GEOLOGY")
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
#xlim = range(-10,-6), ylim = range(36.9,42.2),
asp = 1.0,zcol = "NAME_1")
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
)
?asp
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
asp = 0.8)
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
asp = 0.8,colorkey = FALSE)
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
asp = 0.8,colorkey = FALSE,
key.space = list(x = 0.2,y = 0.2, corner = c(0,0)))
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
asp = 0.8,colorkey = FALSE,
#key.space = list(x = 0.2,y = 0.2, corner = c(0,0)),
scales = list(draw = T))
?key.space
??key.space
library(DICE)
runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 1000)
output = runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 1000)
dicedata$attr
diceData$attr
lat1 = diceData$attr$lat
long1 = diceData$attr$lon
lat1
lon1
long1
output1 = runDICE(dataType = 'gft', year = 2015, mod_level = 3, fit_level = 4, nMCMC = 1000, RegState = 1)
output1 = runDICE(dataType = 'gft', year = 2014, mod_level = 3, fit_level = 4, nMCMC = 1000, RegState = 1)
mydata = get.DICE.data()
mydata$fit$attr
latitude = mydata$fit$attr$lat
longitude = mydata$fit$attr$lon
library(sp)
library(maptools)
require(RColorBrewer)
library(raster)
library(maps)
library(ggplot2)
library(dplyr)
library(rgeos)
port1 = getData('GADM', country = 'USA', level = 1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
port1 = gSimplify(port1, tol=0.01, topologyPreserve=TRUE)
## fills the map basing on variable NAME_1
setwd("~/Documents/yinzhuo ding/SummerInern/week5 7:11:2016 - 7:15:2016")
region_list = list(Region0 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region1 = c("New York","New Jersey","Puerto Rico"),
Region2 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region3 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region4 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region5 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region6 = c("Nebraska","Kansas","Iowa","Missouri"),
Region7 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region8 = c("California","Nevada","Arizona","Hawaii"),
Region9 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region0", "Region1","Region2","Region3","Region4",
"Region5","Region6","Region7","Region8","Region9")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
center = data.frame(gCentroid(port1, byid = TRUE))
center$state = dat$state
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude))
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude)) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = latitude, y = longitude)) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude)) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, col = col)) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude), col = "grey") +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude), col = "#24576D") +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
onset = mydata$fit$attr$onset
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D") +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
onset = mydata$fit$attr$onset
ggplot() +
geom_map(data = map1.df, map = map1.df,
onset
onset = mydata$fit$attr$onset
onset = mydata$fit$onset
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D") +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
pd = cbind(longitude,latitude,onset)
View(pd)
onset = mydata$fit$onset
View(onset)
onset = t(mydata$fit$onset)
pd = cbind(longitude,latitude,onset)
View(pd)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D") +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
onset
onset = onset/max(onet)
onset = onset/max(onset)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D") +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D", show_guide = FALSE) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D", show.legend = FALSE) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
a = mydata$fit$raw
View(a)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D", show.legend = FALSE,alpha = 0.6) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = longitude, y = latitude, size = onset), col = "#24576D", show.legend = FALSE,alpha = 0.8) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
install.packages("ImageMagick")
mydata$fit$rtn
output$rtn
output1$rtn
mydata$fit$factor
mydata = get.DICE.data()
frames = 10
for(i in 1:frames) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
x = seq(0,i,1)
f.3 = dbinom(x, size = i, prob = 0.3)
f.7 = dbinom(x, size = i, prob = 0,7)
png(name)
plot(x,f.3,type = 'h', xlim = c(0,frames), ylim = c(0,0.7), col = 'red')
lines(x,f.7, type = 'h', co = 'blue')
dev.off()
}
setwd("~/Documents/yinzhuo/SummerInern/week5 7:11:2016 - 7:15:2016")
setwd("~/Documents/yinzhuo/SummerInern/week5 7:11:2016 - 7:15:2016")
