name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 6 * onset[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
onset[17,]
onset[18,]
sum(onset[17,])
sum(onset[18,])
sum(onset[19,])
sum(onset[32,])
sum(onset[33,])
sum(onset[34,])
sum(onset[35,])
sum(onset[36,])
nation_long = geocode("USA")$lon
nation_lat = geocode("USA")$lat
nation_r = apply(onset,1,sum)
frame = nrow(onset)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 6 * onset[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
frame = nrow(onset)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 3 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 6 * onset[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
onset[1,]
map_size = "world"
map(map_size, plot = T, fill = T, col = "snow")
map_size='usa'
map(map_size, plot = T, fill = T, col = "snow")
View(onset)
region_r = onset
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / sum(onset[,i])
}
View(region_r)
sum(region[1,])
sum(region_r[1,])
sum(region_r[2,])
sum(region_r[3,])
sum(region_r[4,])
sum(region_r[6,])
region_r = onset
for(i in 1:nrow(onset)) {
region_r[i,] = onset[i,] / sum(onset[i,])
}
View(region_r)
mij = NULL
region = "usa"
gamma = NULL
s_d = NULL
n = dim(mij)[1]
title = expression("M"[ij] * " Mobility Matrix")
states = rownames(mij)
gamma = abs(gamma)
par(mar = c(5, 4, 5, 6))
image(x = 1:n, y = 1:n, mij, zlim = range(mij), xlim = c(1, n), ylim = c(1, n), col = tim.colors(64), xlab = "", ylab = "", axes = FALSE, main = title)
mij
nflights <- dim(flights)[1]
gadm1 = getData('GADM', country = 'USA', level = 1)
gadm1 = gSimplify(gadm1, tol=0.01, topologyPreserve=TRUE)
col = rainbow(length(gadm1$NAME_1))
name = port1$NAME_1
gadm1 = getData('GADM', country = 'USA', level = 1)
gadm1$NAME_1 = as.factor(as.character(port1$NAME_1))
gadm1 = getData('GADM', country = 'USA', level = 1)
gadm1$NAME_1 = as.factor(as.character(port1$NAME_1))
gadm1 = getData('GADM', country = 'USA', level = 1)
gadm1$NAME_1 = as.factor(as.character(gadm1$NAME_1))
name = gadm1$NAME_1
gadm1 = gSimplify(gadm1, tol=0.01, topologyPreserve=TRUE)
col = rainbow(length(name))
par(mar = c(0,0,2,0))
plot(gadm1,col = col,border = grey(0.9),lwd = 0.5)
points(coordinates(gadm1), col = "black", lwd = 1)
gadm1 = getData('GADM', country = 'USA', level = 0)
gadm1$NAME_1 = as.factor(as.character(gadm1$NAME_1))
gadm1$NAME_1 = as.factor(as.character(gadm1$NAME_1))
summary(gadm1)
gadm1 = getData('GADM', country = 'USA', level = 1)
onset = output$rtn
rtn = onset
ncountry = dim(rtn)[2]
noPts = dim(rtn)[1]
color.north = 'blue'
color.south = 'red'
color.tropic = 'green'
color = rep(color.tropic,ncountry)
inorth <- which(country$lat > 20.0)
a = matrix(r1 = c(1,2), r2 =(2,4), r3 = (3,6))
a = matrix(r1 = c(1,2), r2 = c(2,4), r3 = c(3,6))
a = c(1,2,3)
b = c(2,4,6)
c = cbind(a,b)
View(c)
c = t(c)
ggplot() + geom_point(aes(x = c(1,2,3), y = c(1,1,1), size = c[1,]))
ggplot() + geom_point(aes(x = c(1,2,3), y = c(1,1,1), size = c[2,]))
ggplot() + geom_point(aes(x = c(1,2,3), y = c(1,1,1), size = c[2,]), stat = "identity")
ggplot() + geom_point(aes(x = c(1,2,3), y = c(1,1,1), size = c[1,]), stat = "identity")
port1 = getData('GADM', country = 'USA', level = 1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
port1 = gSimplify(port1, tol=0.01, topologyPreserve=TRUE)
## fills the map basing on variable NAME_1
region_list = list(Region0 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region1 = c("New York","New Jersey","Puerto Rico"),
Region2 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region3 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region4 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region5 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region6 = c("Nebraska","Kansas","Iowa","Missouri"),
Region7 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region8 = c("California","Nevada","Arizona","Hawaii"),
Region9 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region0", "Region1","Region2","Region3","Region4",
"Region5","Region6","Region7","Region8","Region9")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
center = data.frame(gCentroid(port1, byid = TRUE))
center$state = dat$state
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
mydata = get.DICE.data()
longitude = mydata$fit$attr$lon
latitude = mydata$fit$attr$lat
output = runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 1000)
onset = output$rtn
for(i in 1:ncol(output$rtn)) {
onset[,i] = output$rtn[,i]/as.numeric(mydata$fit$factor[i])
}
#region_r = onset
#for(i in 1:nrow(onset)) {
#region_r[i,] = onset[i,] / sum(onset[i,])
#}
nation_long = geocode("USA")$lon
nation_lat = geocode("USA")$lat
nation_r = apply(onset,1,sum)
View(onset)
region_r = onset
for(i in 1:nrow(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
region_r = onset
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
View(onset)
View(region_r)
week = mydata$weeks
#### make a movie
frame = nrow(onset)
for(i in 1:5) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 3 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
frame = nrow(onset)
for(i in 1:5) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 3 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
View(region_r)
frame = nrow(onset)
for(i in 1:20) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 3 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
frame = nrow(onset)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 3 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
View(region_r)
region_r = onset
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] - min(onset[,i])
}
region_r = onset
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] - min(onset[,i])
}
nation_long = geocode("USA")$lon
nation_lat = geocode("USA")$lat
nation_r = apply(region_r,1,sum)
i = 1
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
View(region_r)
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 40 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
region_r = onset
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
nation_r = apply(region_r,1,sum)
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
View(onset)
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] - min(onset[,i])
#region_r[,i] = region_r[,i]
}
View(region_r)
region_r = onset
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] - min(onset[,i])
#region_r[,i] = region_r[,i]
}
View(region_r)
pi
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
region_r = sqrt(region_r/pi)
nation_r = apply(region_r,1,sum)
onset = sqrt(onset/pi)
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
nation_r = apply(region_r,1,sum)
frame = nrow(onset)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = longitude, y = latitude, size = onset[i,]), stat = "identity", col = "#24576D", show.legend = FALSE,alpha = 0.7) +
#scale_size_continuous(range = c(10,20)) +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
ggsave(file = name)
}
