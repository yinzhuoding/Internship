nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
mydata = get.DICE.data()
longitude = mydata$fit$attr$lon
latitude = mydata$fit$attr$lat
output = runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 1000)
onset = output$rtn
for(i in 1:ncol(output$rtn)) {
onset[,i] = output$rtn[,i]/as.numeric(mydata$fit$factor[i])
}
nation_long = suppressMessages(geocode("USA")$lon)
nation_lat = suppressMessages(geocode("USA")$lat)
region_r = onset
# Method1: divided by minimum value
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
nation_r = apply(region_r,1,sum)
week = mydata$weeks
#### make a movie
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(onset)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
}
ggsave(filename = name)
}
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
ggsave(filename = name)
}
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
#suppressMessages(saveGIF(map.animate(),interval = 0.2, movie.name = moviename))
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
View(region_r)
View(region_r)
output = runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 1000)
onset = output$rtn
for(i in 1:ncol(output$rtn)) {
onset[,i] = output$rtn[,i]/as.numeric(mydata$fit$factor[i])
}
nation_long = geocode("USA")$lon
nation_lat = geocode("USA")$lat
region_r = onset
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
nation_r = apply(region_r,1,sum)
View(region_r)
week = mydata$weeks
#### make a movie
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(onset)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
#suppressMessages(saveGIF(map.animate(),interval = 0.2, movie.name = moviename))
system("convert -delay 20 *.png map.gif")
getwd()
setwd("~/Documents/yinzhuo/SummerInern/week6 7:18:2016 - 7:22:2016/output/output")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
setwd("~/Documents/yinzhuo/SummerInern/week6 7:18:2016 - 7:22:2016")
?getData
?gSimplify
port1 = suppressMessages(getData('GADM', country = 'USA', level = 1))
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
## Simplifying map-data
port1 = gSimplify(port1, tol=0.01, topologyPreserve=TRUE)
port1 = gSimplify(port1, tol=10, topologyPreserve=TRUE)
## fills the map basing on variable NAME_1
region_list = list(Region0 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region1 = c("New York","New Jersey","Puerto Rico"),
Region2 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region3 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region4 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region5 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region6 = c("Nebraska","Kansas","Iowa","Missouri"),
Region7 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region8 = c("California","Nevada","Arizona","Hawaii"),
Region9 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region0", "Region1","Region2","Region3","Region4",
"Region5","Region6","Region7","Region8","Region9")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
mydata = get.DICE.data()
longitude = mydata$fit$attr$lon
latitude = mydata$fit$attr$lat
output = runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 1000)
onset = output$rtn
for(i in 1:ncol(output$rtn)) {
onset[,i] = output$rtn[,i]/as.numeric(mydata$fit$factor[i])
}
nation_long = suppressMessages(geocode("USA")$lon)
nation_lat = suppressMessages(geocode("USA")$lat)
region_r = onset
# Method1: divided by minimum value
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
nation_r = apply(region_r,1,sum)
week = mydata$weeks
i = 1
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
port1 = suppressMessages(getData('GADM', country = 'USA', level = 1))
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
## Simplifying map-data
port1 = gSimplify(port1, tol=1, topologyPreserve=TRUE)
## fills the map basing on variable NAME_1
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
port1 = suppressMessages(getData('GADM', country = 'USA', level = 1))
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
## Simplifying map-data
port1 = gSimplify(port1, tol = 0.1, topologyPreserve = TRUE)
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
p
port1 = gSimplify(port1, tol = 0.01, topologyPreserve = TRUE)
port1 = suppressMessages(getData('GADM', country = 'USA', level = 1))
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
## Simplifying map-data
port1 = gSimplify(port1, tol = 0.01, topologyPreserve = TRUE)
region_list = list(Region0 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region1 = c("New York","New Jersey","Puerto Rico"),
Region2 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region3 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region4 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region5 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region6 = c("Nebraska","Kansas","Iowa","Missouri"),
Region7 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region8 = c("California","Nevada","Arizona","Hawaii"),
Region9 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region0", "Region1","Region2","Region3","Region4",
"Region5","Region6","Region7","Region8","Region9")
state.list = name
nstate = length(state.list)
for(i in nstate) {
k = regexpr(":", state.list[i])
if(k != -1)
state.list[i] = substr(state.list[i], start = 1, stop = (k-1))
}
state.col = NULL
state.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(state.list) %in% myregion)
state.col[index] = col[j]
state.label[index] = labels[j]
}
map1 = fortify(port1)
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = state.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(state.col)[order(unique(state.label))],
labels = labels)
setwd("~/Documents/yinzhuo/SummerInern/week6 7:18:2016 - 7:22:2016")
mapMovie = function(dataType = "cdc", year = 2015, nweeksFit = 52, model = 5, isingle = 0, nMCMC = 1000, nreal = 1) {
#' Make a map movie for HHS regions indicating the trend of %ILI in a certain flu year for each region and nation.
#'
#' @param dataType either 'cdc' or 'gft'.
#' @param year Integer - start year of the flu season
#' @param nweeksFit Integer - Number of weeks that will be fitted.  Default is to fit all the data.
#' @param model Integer - The model number, see manual for more details (1-5 are supported)
#' @param isingle Integer - 0: couple the fit spatial regions; 1: no coupling
#' @param nMCMC Integer - number of steps/trials in the MCMC procedure
#' @param nreal Integer - number of chains
#'
#' @return a map movie with format .gif
## Data Type: cdc or gft
if (is.null(dataType))
dataType = "cdc"
## Start year of the flu season
if (is.null(year))
year = 2015
## Number of weeks of data that are fitted
if (is.null(nweeksFit))
nweeksFit = 52
## Model Number
if (is.null(model))
model = 5
## Number of steps/trials in each MCMC chain
if (is.null(nMCMC))
nMCMC = 1000
## Number of MCMC chains
if (is.null(nreal))
nreal = 1
## Coupled (isingle = 0) or Uncoupled (isingle = 1) fit for the spatial regions
if (is.null(isingle))
isingle = 0
## Get map-data from GADM and simplify it
port1 = suppressMessages(getData('GADM', country = 'USA', level = 1))
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
port1 = gSimplify(port1, tol = 0.01, topologyPreserve = TRUE)
## fills the map basing on different region
region_list = list(Region0 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region1 = c("New York","New Jersey","Puerto Rico"),
Region2 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region3 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region4 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region5 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region6 = c("Nebraska","Kansas","Iowa","Missouri"),
Region7 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region8 = c("California","Nevada","Arizona","Hawaii"),
Region9 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region0", "Region1","Region2","Region3","Region4",
"Region5","Region6","Region7","Region8","Region9")
state.list = name
nstate = length(state.list)
for(i in nstate) {
k = regexpr(":", state.list[i])
if(k != -1)
state.list[i] = substr(state.list[i], start = 1, stop = (k-1))
}
state.col = NULL
state.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(state.list) %in% myregion)
state.col[index] = col[j]
state.label[index] = labels[j]
}
## change to data.frame
map1 = fortify(port1)
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = state.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(state.col)[order(unique(state.label))],
labels = labels)
mydata = get.DICE.data(dataType = dataType, year = year, mod_level = 2, fit_level = 3, model = model, nweeksFit = nweeksFit, isingle=isingle)
longitude = mydata$fit$attr$lon
latitude = mydata$fit$attr$lat
output = runDICE(dataType = dataType, year = year, mod_level = 2, fit_level = 3, model = model, isingle = isingle, nMCMC = nMCMC, nreal = nreal)
onset = output$rtn
for(i in 1:ncol(output$rtn)) {
onset[,i] = output$rtn[,i]/as.numeric(mydata$fit$factor[i])
}
nation_long = suppressMessages(geocode("USA")$lon)
nation_lat = suppressMessages(geocode("USA")$lat)
region_r = onset
# Method1: divided by minimum value
for(i in 1:ncol(onset)) {
region_r[,i] = onset[,i] / min(onset[,i])
}
nation_r = apply(region_r,1,sum)
week = mydata$weeks
#### make a movie
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(onset)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
cat("For movie see: ", subDir, "/", moviename, sep = "")
}
mapMovie(nweeksFit = 51)
mydata = get.DICE.data()
summary(mydata$model)
summary(mydata$model$attr)
table(mydata$model$attr)
summary(mydata$model$attr)
summary(mydata$model$attr$ABBV_2)
summary(mydata$model$attr$NAME_2)
mydata$model$attr$ABBV_2
mydata$model$attr$NAME_2
?getData
mydata$fit$level
getData('GADM', country = 'CHN', level = 1,path = getwd())
getData('GADM', country = 'CHN', level = 1,path = getwd())
p1 =getData('GADM', country = 'CHN', level = 1, download = FALSE)
