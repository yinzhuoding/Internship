Region9 = c("California","Nevada","Arizona","Hawaii"),
Region10 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
center = data.frame(gCentroid(port1, byid = TRUE))
center$state = dat$state
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = sort(unique(prov.label)))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(20,50)) +
theme(legend.title = element_blank())
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(20,50)) +
theme(legend.title = element_blank())
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(20,50)) +
theme(legend.title = element_blank())
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = sort(unique(prov.label)))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(20,50)) +
theme(legend.title = element_blank())
library(sp)
library(maptools)
require(RColorBrewer)
library(raster)
library(maps)
library(ggplot2)
library(dplyr)
library(rgeos)
port1 = getData('GADM', country = 'USA', level = 1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
port1 = gSimplify(port1, tol=0.01, topologyPreserve=TRUE)
## fills the map basing on variable NAME_1
region_list = list(Region1 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region2 = c("New York","New Jersey","Puerto Rico"),
Region3 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region4 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region5 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region6 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region7 = c("Nebraska","Kansas","Iowa","Missouri"),
Region8 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region9 = c("California","Nevada","Arizona","Hawaii"),
Region10 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
center = data.frame(gCentroid(port1, byid = TRUE))
center$state = dat$state
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = sort(unique(prov.label)))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(20,50)) +
theme(legend.title = element_blank())
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(20,50)) +
theme(legend.title = element_blank())
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
spplot(port1,"NAME_1",
col.regions = prov.col,
col = "white",
asp = 0.8,colorkey = FALSE,
#key.space = list(x = 0.2,y = 0.2, corner = c(0,0)),
scales = list(draw = T))
summary(port1)
unique(prov.label)
order(unique(prov.label))
labels = c("Region1","Region10","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9")
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
unique(prov.label)
ind = which(unique(prov.label) == "Region10")
levels = unique(prov.col)[order(unique(prov.label[-ind]))]
order(unique(prov.label[-ind]))
prov.label[-ind]
ind = which(prov.label == "Region10")
prov.label[-ind]
order(unique(prov.label[-ind]))
unique(prov.label[-ind])
unique(prov.col)[order(unique(prov.label[-ind]))]
prov.col[ind]
unique(prov.col[ind])
col[10]
col
ind = which(prov.label == "Region10")
levels = unique(prov.col)[order(unique(prov.label[-ind]))]
levels = c(levels, col[10])
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
ind = which(prov.label == "Region10")
levels = unique(prov.col)[order(unique(prov.label[-ind]))]
levels = c(levels, col[10])
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
map1.df$col = factor(map1.df$col,
levels = levels,
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
port1 = getData('GADM', country = 'USA', level = 1)
port1$NAME_1 = as.factor(as.character(port1$NAME_1))
name = port1$NAME_1
port1 = gSimplify(port1, tol=0.01, topologyPreserve=TRUE)
## fills the map basing on variable NAME_1
region_list = list(Region1 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region2 = c("New York","New Jersey","Puerto Rico"),
Region3 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region4 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region5 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region6 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region7 = c("Nebraska","Kansas","Iowa","Missouri"),
Region8 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region9 = c("California","Nevada","Arizona","Hawaii"),
Region10 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
center = data.frame(gCentroid(port1, byid = TRUE))
center$state = dat$state
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
ind = which(prov.label == "Region10")
levels = unique(prov.col)[order(unique(prov.label[-ind]))]
levels = c(levels, col[10])
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = levels,
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = sort(unique(prov.label)))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
a = seq(1,10,1)
order(a)
prov.label
region_list = list(Region0 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region1 = c("New York","New Jersey","Puerto Rico"),
Region2 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region3 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region4 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region5 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region6 = c("Nebraska","Kansas","Iowa","Missouri"),
Region7 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region8 = c("California","Nevada","Arizona","Hawaii"),
Region9 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
center = data.frame(gCentroid(port1, byid = TRUE))
center$state = dat$state
#labels = c("Region1","Region2","Region3","Region4","Region5",
#"Region6","Region7","Region8","Region9","Region10")
#ind = which(prov.label == "Region10")
#levels = unique(prov.col)[order(unique(prov.label[-ind]))]
#levels = c(levels, col[10])
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = sort(unique(prov.label)))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
prov.label
region_list = list(Region0 = c("Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","Vermont"),
Region1 = c("New York","New Jersey","Puerto Rico"),
Region2 = c("Pennsylvania","Delaware","Maryland","West Virginia","Virginia","District of Columbia"),
Region3 = c("Kentucky","Tennessee","North Carolina","South Carolina","Georgia","Florida","Alabama","Mississippi"),
Region4 = c("Minnesota","Wisconsin","Illinois","Indiana","Michigan","Ohio"),
Region5 = c("New Mexico","Texas","Oklahoma","Arkansas","Louisiana"),
Region6 = c("Nebraska","Kansas","Iowa","Missouri"),
Region7 = c("Utah","Colorado","Wyoming","Montana","South Dakota","North Dakota"),
Region8 = c("California","Nevada","Arizona","Hawaii"),
Region9 = c("Oregon","Washington","Idaho","Alaska"))
col = rainbow(length(region_list))
labels = c("Region0", "Region1","Region2","Region3","Region4",
"Region5","Region6","Region7","Region8","Region9")
province.list = name
nprovince = length(province.list)
for(i in nprovince) {
k = regexpr(":", province.list[i])
if(k != -1)
province.list[i] = substr(province.list[i], start = 1, stop = (k-1))
}
prov.col = NULL
prov.label = NULL
nregion = length(region_list)
for(j in 1:nregion) {
myregion = region_list[[j]]
index = which(as.character(province.list) %in% myregion)
prov.col[index] = col[j]
prov.label[index] = labels[j]
}
map1 = fortify(port1) # change to data.frame
map1$id = as.integer(map1$id)
dat = data.frame(id = 1:(length(name)), state = name)
map1.df = inner_join(map1, dat, by = "id")
center = data.frame(gCentroid(port1, byid = TRUE))
center$state = dat$state
#labels = c("Region1","Region2","Region3","Region4","Region5",
#"Region6","Region7","Region8","Region9","Region10")
#ind = which(prov.label == "Region10")
#levels = unique(prov.col)[order(unique(prov.label[-ind]))]
#levels = c(levels, col[10])
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = sort(unique(prov.label)))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
labels = c("Region1","Region2","Region3","Region4","Region5",
"Region6","Region7","Region8","Region9","Region10")
#ind = which(prov.label == "Region10")
#levels = unique(prov.col)[order(unique(prov.label[-ind]))]
#levels = c(levels, col[10])
map1.df$col = prov.col[map1.df$id]
map1.df$col = factor(map1.df$col,
levels = unique(prov.col)[order(unique(prov.label))],
labels = labels)
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
theme(legend.title = element_blank())
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region")
theme(legend.title = element_blank())
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank())
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
#geom_text(data = center, aes(label = state, x=x, y=y), size = 2) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(lineheight = 0.8, face = "italic"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(lineheight = 1.8, face = "italic"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 3, family = "serif", face = "bold"))
ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle("USA map colored by CDC region") +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
