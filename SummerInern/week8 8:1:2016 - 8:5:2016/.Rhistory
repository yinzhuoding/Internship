region_lb = region.lb
region_ub = region.ub
# Method1: divided by minimum value
for(i in 1:ncol(region.r)) {
dnt = min(region.r[,i])
region_r[,i] = region.r[,i] / dnt
region_lb[,i] = region.lb[,i] / dnt
region_ub[,i] = region.ub[,i] / dnt
}
week = mydata$weeks
setwd("~/Documents/yinzhuo/SummerInern/week8 8:1:2016 - 8:5:2016")
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(region.mean)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) #+
#geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
#geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 4 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
quanci = function(x) {
ub = quantile(x, 0.875)
lb = quantile(x, 0.125)
return(c(lb,ub))
}
profile = output$profile
region.r = output$rtn
quan.out = apply(profile,c(2,3),quanci)
region.lb = quan.out[1, , ]
region.ub  =quan.out[2, , ]
for(i in 1:ncol(output$rtn)) {
fac = as.numeric(mydata$fit$factor[i])
region.r[,i] = region.r[,i]/fac
region.lb[,i] = region.lb[,i]/fac
region.ub[,i] = region.ub[,i]/fac
}
region_r = region.r
region_lb = region.lb
region_ub = region.ub
# Method1: divided by minimum value
for(i in 1:ncol(region.r)) {
dnt = min(region.r[,i])
region_r[,i] = region.r[,i] / dnt
region_lb[,i] = region.lb[,i] / dnt
region_ub[,i] = region.ub[,i] / dnt
}
nation_r = apply(region_r,1,sum)
week = mydata$weeks
#### make a movie
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) #+
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
cat("For movie see: ", subDir, "/", moviename, sep = "")
View(region_ub)
output = runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 10000)
quanci = function(x) {
ub = quantile(x, 0.875)
lb = quantile(x, 0.125)
return(c(lb,ub))
}
# Data for region
#onset = output$rtn
profile = output$profile
region.r = output$rtn
quan.out = apply(profile,c(2,3),quanci)
region.lb = quan.out[1, , ]
region.ub  =quan.out[2, , ]
for(i in 1:ncol(output$rtn)) {
fac = as.numeric(mydata$fit$factor[i])
region.r[,i] = region.r[,i]/fac
region.lb[,i] = region.lb[,i]/fac
region.ub[,i] = region.ub[,i]/fac
}
region_r = region.r
region_lb = region.lb
region_ub = region.ub
# Method1: divided by minimum value
for(i in 1:ncol(region.r)) {
dnt = min(region.r[,i])
region_r[,i] = region.r[,i] / dnt
region_lb[,i] = region.lb[,i] / dnt
region_ub[,i] = region.ub[,i] / dnt
}
nation_r = apply(region_r,1,sum)
week = mydata$weeks
#### make a movie
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 3 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
#geom_point(aes(x = nation_long, y = nation_lat), size = 2 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
cat("For movie see: ", subDir, "/", moviename, sep = "")
sum(rtn[1,])
sum(output$rtn[1,])
sum(output$rtn[1,])/52
nation.r = output$model_rtn
model_profile = output$model_profile
nation.out = apply(model_profile,2,quanci)
nation.lb = nation.out[1,]
nation.ub = nation.out[2,]
nation_r = nation.r/min(nation.r)
nation_lb = nation.lb/min(nation.r)
nation_ub = nation.ub/min(nation.r)
nation_r
nation_lb
nation_ub
plot(nation_r)
lines(nation_lb)
lines(nation_ub)
week = mydata$weeks
#### make a movie
mainDir = getwd()
subDir = "output"
err = makeDir(subDir = subDir)
setwd(paste(mainDir,subDir,sep = "/"))
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes(x = nation_long, y = nation_lat), size = 6 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
geom_point(aes(x = nation_long, y = nation_lat), size = 6 * nation_lb[i], col = "dodgerblue", show.legend = FALSE, alpha = 0.5) +
geom_point(aes(x = nation_long, y = nation_lat), size = 6 * nation_ub[i], col = "mediumpurple", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
setwd(mainDir)
frame = nrow(region.r)
for(i in 1:frame) {
if(i < 10) {
name = paste('000',i,'plot.png',sep = '')
}
if(i >= 10) {
name = paste('00',i,'plot.png',sep = '')
}
p = ggplot() +
geom_map(data = map1.df, map = map1.df,
aes(map_id = id, x = long, y = lat, group = group, fill = col),
size = 0.25) +
coord_map() +
geom_point(aes_string(x = nation_long, y = nation_lat), size = 15 * nation_r[i], col = "grey", show.legend = FALSE, alpha = 0.5) +
geom_point(aes_string(x = nation_long, y = nation_lat), size = 15 * nation_lb[i], col = "dodgerblue", show.legend = FALSE, alpha = 0.5) +
geom_point(aes_string(x = nation_long, y = nation_lat), size = 15 * nation_ub[i], col = "mediumpurple", show.legend = FALSE, alpha = 0.5) +
scale_x_continuous(name = "",limits = c(-130,-60)) +
scale_y_continuous(name = "",limits = c(25,50)) +
ggtitle(paste("USA map colored by CDC region - week ", week[i], sep = '')) +
theme(legend.title = element_blank(),
plot.title = element_text(size = 15, family = "serif", face = "bold"))
for(j in 1:10) {
p = p + geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_r[i,j],  col = "#24576D", show.legend = FALSE,alpha = 0.8) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_ub[i,j],  col = "forestgreen", show.legend = FALSE,alpha = 0.5) +
geom_point(aes_string(x = longitude[j], y = latitude[j]), size = 2 * region_lb[i,j],  col = "deeppink", show.legend = FALSE,alpha = 0.5)
}
suppressMessages(ggsave(filename = name))
}
moviename = "map.gif"
system("convert -delay 20 *.png map.gif")
file.remove(list.files(pattern = ".png"))
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_r, type = "n")
lines(region_r, col = "black")
lines(region_lb, col = "deeppink")
lines(region_ub, col = "dodgerblue")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_r[,i], type = "n")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
lines(region_ub[,i], col = "dodgerblue")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_r[,i], type = "n", xlab = "week", ylab = "radius of the circle")
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_r[,i], type = "n", xlab = "week", ylab = "radius")
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend(topleft, c("basic circle", "upper bound", "lower bound"), text.col = c("black", "dodgerblue","deeppink"))
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_r[,i], type = "n", xlab = "week", ylab = "radius")
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c("basic circle", "upper bound", "lower bound"), text.col = c("black", "dodgerblue","deeppink"))
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_r[,i], type = "n", xlab = "week", ylab = "radius")
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c("basic circle", "upper bound", "lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_r[,i], type = "n", xlab = "week", ylab = "radius")
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_ub[,i], type = "n", xlab = "week", ylab = "radius")
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_ub[,i], type = "n", xlab = "week", ylab = "radius")
lines(region_ub[,i], col = "dodgerblue",size = 2)
lines(region_r[,i], col = "black", size = 2)
lines(region_lb[,i], col = "deeppink", size = 2)
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
}
output = runDICE(dataType = 'cdc', year = 2015, mod_level = 2, fit_level = 3, nMCMC = 10000)
warnings()
nation_long = geocode("USA")$lon
nation_lat = geocode("USA")$lat
# Use quantile to calculate the 0.95 confidence interval
quanci = function(x) {
ub = quantile(x, 0.875)
lb = quantile(x, 0.125)
return(c(lb,ub))
}
# Data for region
#onset = output$rtn
profile = output$profile
region.r = output$rtn
quan.out = apply(profile,c(2,3),quanci)
region.lb = quan.out[1, , ]
region.ub  =quan.out[2, , ]
for(i in 1:ncol(output$rtn)) {
fac = as.numeric(mydata$fit$factor[i])
region.r[,i] = region.r[,i]/fac
region.lb[,i] = region.lb[,i]/fac
region.ub[,i] = region.ub[,i]/fac
}
region_r = region.r
region_lb = region.lb
region_ub = region.ub
# Method1: divided by minimum value
for(i in 1:ncol(region.r)) {
dnt = min(region.r[,i])
region_r[,i] = region.r[,i] / dnt
region_lb[,i] = region.lb[,i] / dnt
region_ub[,i] = region.ub[,i] / dnt
}
nation.r = output$model_rtn
model_profile = output$model_profile
nation.out = apply(model_profile,2,quanci)
nation.lb = nation.out[1,]
nation.ub = nation.out[2,]
nation_r = nation.r/min(nation.r)
nation_lb = nation.lb/min(nation.r)
nation_ub = nation.ub/min(nation.r)
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_ub[,i], type = "n", xlab = "week", ylab = "radius")
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_ub[,i], type = "n", xlab = "week", ylab = "radius", main = paste("region",i, sep  =""))
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
}
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_ub[,i], type = "n", xlab = "week", ylab = "radius", main = paste("region",i, sep  =""))
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
}
plot(nation_ub, type = "n", xlab = "week", ylab = "radius", main = "nation")
lines(nation_ub, col = "dodgerblue")
lines(nation_r, col = "black")
lines(nation_lb, col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n")
par(mfrow = c(3,4))
for(i in 1:10) {
plot(region_ub[,i], type = "n", xlab = "week", ylab = "radius", main = paste("region",i, sep  =""))
lines(region_ub[,i], col = "dodgerblue")
lines(region_r[,i], col = "black")
lines(region_lb[,i], col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n",cex = 0.5)
}
plot(nation_ub, type = "n", xlab = "week", ylab = "radius", main = "nation")
lines(nation_ub, col = "dodgerblue")
lines(nation_r, col = "black")
lines(nation_lb, col = "deeppink")
legend("topleft", c(" - basic circle", " - upper bound", " - lower bound"), text.col = c("black", "dodgerblue","deeppink"), bty = "n",cex = 0.5)
