	subroutine subprop(y,gamay,shdat,schooldat,dt,nstep,nweeks,
     $                     nweeksFit,param,nparam,chi2,x,Rvec,wweight)

C Order of parameters is: R0min, deltaR, aparam, pC, seed, Tg, N, Time0,alpha,delta,ts and dur
	
	implicit real*8(a-h,o-z)

	real*8 dt, param(nparam)
! Param holds all the parameters
! sh holds the specific humidity
	integer nweeks,nweeksFit,nstep
	real*8 y(nweeks),gamay(nweeks),shdat(nweeks),wweight(nweeks)
	real*8 schooldat(nweeks)
! Y has in it the incidence data, x is generated by the SIR model
	real*8 x0(4),x(nweeks)
	real*8 dsdt(nweeks*nstep)
	real*8 Rvec(nweeks)
	real*8 chi2
      external calcFit

!

	R0min = param(1)
	deltaR = param(2)
	aparam = param(3)
	pC = param(4)
	seed = param(5)
	Tg = param(6)
	fNeff = param(7)
	t0 = param(8) 
	alpha = param(9)
	delta = param(10)
	ts    = param(11)
	dur   = param(12)


! Initial values for S(0), I(0), R(0) and -dS(0)/dt

	x0(2) = 1.0
	x0(1) = fNeff  - x0(2)
	x0(3) = 0.0d0
	x0(4) = 0.0d0

	dsdt = 0.0d0

! Here we must call the RK4 routine and calculate the model prediction for incidence rate
	call RK4(dt,nweeks,nstep,x0,Param,nparam,shdat,
     $    schooldat,dsdt,Rvec)

! Now need to integrate over one week periods and multiply by pC

	call weekly(nweeks,nstep,dsdt,x,pC,seed)
	   
	chi2 = calcFit(y,gamay,x,nweeks,nweeksFit,wweight)

	return
	end subroutine subprop

!----------------------------------------------------------------------

      SUBROUTINE RK4(dt, nweeks,nstep,Y,Param,nparam,shdat,
     $  schooldat,dsdt,Rvec)

      implicit real*8(a-h,o-z)

      integer nweeks, nstep
      REAL*8 dt, Y(4), Param(nparam),tmpY(4)
      real*8 shdat(nweeks),schooldat(nweeks)
      real*8 param3(3)
      REAL*8 dPop1(4), dPop2(4), dPop3(4), dPop4(4)
      Real*8 SIR(nweeks,4),dsdt(nstep*nweeks)
      real*8 Rvec(nweeks)
      real*8 p2, p3, p6	
C
C     Integrates the equations one step, using Runge-Kutta 4 
C     Note: we work with arrays rather than variables to make the
C     coding easier
C

	p6 = 1.0d0 / 6.0d0
	p3 = 1.0d0 / 3.0d0
	p2 = 1.0d0 / 2.0d0

	R0min = param(1)
	deltaR = param(2)
	aparam = param(3)
	pC = param(4)
	seed = param(5)
	Tg = param(6)
	fNeff = param(7)
	t0 = param(8)
	alpha = param(9)
	delta = param(10)
	ts    = param(11)
	dur   = param(12)

	param3(1) = R0min
	param3(2) = Tg
	param3(3) = fNeff

	dsdt = 0.0d0

	do iweek = 1, nweeks
! Update information

	   do j=1,4
	      SIR(iweek,j)=Y(j)
	   enddo

         do istep = 1, nstep

	    time = dt*(istep+(iweek-1)*nstep)

	    param3(1) = R0min* (1.0d0+deltaR*exp(-aparam*shdat(iweek)))
     $               *(1.0d0-alpha*schooldat(iweek))

	    if (iweek >= ts .and. iweek <= (ts+dur)) Then
	       param3(1) = param3(1) * (1.0d0+delta)
	    endif

! The equations use beta and not R(t)

	    param3(1) = param3(1)/Tg

! if time < t0 no need to integrate anything yet 

	    if (time .lt. t0) go to 101

            call diff(Param3,Y,dpop1)

            
	    tmpY=Y+dt*dPop1 * p2
 
            call diff(Param3,tmpY,dpop2)

	    tmpY=Y+dt*dPop2 * p2

            call diff(Param3,tmpY,dpop3)

	    tmpY=Y+dt*dPop3

            call diff(Param3,tmpY,dpop4)

	    tmpY=Y+dt*(dPop1*p6 + dPop2*p3 +
     $              dPop3*p3 + dPop4*p6)
	    Y = tmpY

!     Update -dS/dt
 101	    continue
            dsdt(istep+(iweek-1)*nstep) = y(4)

	 enddo

	 Rvec(iweek) = param3(1)*Tg
      enddo


      RETURN
      END

!------------------------------------
C The Main Differential Equations.

      SUBROUTINE Diff(Param, Pop, dPop)

      implicit real*8(a-h,o-z)

      REAL*8 Param(3), Pop(4), dPop(4)

C
C     The differential equations-including source/sink term
C

C     dS/dt =
      dPop(1) = - Param(1)*Pop(1)*Pop(2)/Param(3)
C     dI/dt =
      dPop(2) =   Param(1)*Pop(1)*Pop(2)/Param(3)
     $          - Pop(2)/Param(2)
C     dR/dt =
      dPop(3) =   Pop(2)/Param(2) 
c cummulative dsdt
      dPop(4) = Param(1)*Pop(1)*Pop(2)/Param(3)
      RETURN
      END

!--------------------------------------------------------------------------------
           
        subroutine weekly(iweek,nstep,dsdt,x,pC,seed)
        
        implicit real*8(a-h,o-z)
        integer iweek,nstep
        real*8 dsdt(iweek*nstep),x(iweek)

        do i=1,iweek
           x(i) = dsdt(i*nstep) - dsdt(1+(i-1)*nstep)
        enddo
	x= x* pC +seed
        return
        end

!---------------------------------------------------------------------------------

        function calcFit(y,gamay,x,iweek,nweeksFit,wweight)

        implicit real*8(a-h,o-z)

        integer iweek,nweeksFit
        real*8 y(iweek),x(iweek),gamay(iweek),wweight(iweek)
        real*8 xi, yi,gamayi,sum,val,CalcFit,wweighti


c x is the simulated data
c y is the base profile
c gamay holds log of Gamma function of (yi+1)


C calculate the P(yi,xi)
        sum = 0.0d0
        do i=1,nweeksFit

           yi = y(i)
           xi = x(i)
	   gamayi = gamay(i)
           wweighti = wweight(i)

           val = yi * log(xi) - xi - gamayi
           sum = sum + wweighti*val

        enddo
        
        CalcFit = -sum

        return
        end function CalcFit
	
